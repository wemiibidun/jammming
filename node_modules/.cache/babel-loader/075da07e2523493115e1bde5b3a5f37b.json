{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _constants = require('./constants');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst NODE_MODULES_REGEXP = (0, _jestRegexUtil().replacePathSepForRegex)(_constants.NODE_MODULES);\nconst initialOptions = {\n  automock: false,\n  bail: (0, _jestValidate().multipleValidOptions)(false, 0),\n  cache: true,\n  cacheDirectory: '/tmp/user/jest',\n  changedFilesWithAncestor: false,\n  changedSince: 'master',\n  clearMocks: false,\n  collectCoverage: true,\n  collectCoverageFrom: ['src', '!public'],\n  collectCoverageOnlyFrom: {\n    '<rootDir>/this-directory-is-covered/Covered.js': true\n  },\n  coverageDirectory: 'coverage',\n  coveragePathIgnorePatterns: [NODE_MODULES_REGEXP],\n  coverageProvider: 'v8',\n  coverageReporters: ['json', 'text', 'lcov', 'clover'],\n  coverageThreshold: {\n    global: {\n      branches: 50,\n      functions: 100,\n      lines: 100,\n      statements: 100\n    }\n  },\n  dependencyExtractor: '<rootDir>/dependencyExtractor.js',\n  displayName: (0, _jestValidate().multipleValidOptions)('test-config', {\n    color: 'blue',\n    name: 'test-config'\n  }),\n  errorOnDeprecated: false,\n  expand: false,\n  extraGlobals: [],\n  filter: '<rootDir>/filter.js',\n  forceCoverageMatch: ['**/*.t.js'],\n  forceExit: false,\n  globalSetup: 'setup.js',\n  globalTeardown: 'teardown.js',\n  globals: {\n    __DEV__: true\n  },\n  haste: {\n    computeSha1: true,\n    defaultPlatform: 'ios',\n    hasteImplModulePath: '<rootDir>/haste_impl.js',\n    platforms: ['ios', 'android'],\n    throwOnModuleCollision: false\n  },\n  injectGlobals: true,\n  json: false,\n  lastCommit: false,\n  logHeapUsage: true,\n  maxConcurrency: 5,\n  maxWorkers: '50%',\n  moduleDirectories: ['node_modules'],\n  moduleFileExtensions: ['js', 'json', 'jsx', 'ts', 'tsx', 'node'],\n  moduleLoader: '<rootDir>',\n  moduleNameMapper: {\n    '^React$': '<rootDir>/node_modules/react'\n  },\n  modulePathIgnorePatterns: ['<rootDir>/build/'],\n  modulePaths: ['/shared/vendor/modules'],\n  name: 'string',\n  noStackTrace: false,\n  notify: false,\n  notifyMode: 'failure-change',\n  onlyChanged: false,\n  onlyFailures: false,\n  preset: 'react-native',\n  prettierPath: '<rootDir>/node_modules/prettier',\n  projects: ['project-a', 'project-b/'],\n  reporters: ['default', 'custom-reporter-1', ['custom-reporter-2', {\n    configValue: true\n  }]],\n  resetMocks: false,\n  resetModules: false,\n  resolver: '<rootDir>/resolver.js',\n  restoreMocks: false,\n  rootDir: '/',\n  roots: ['<rootDir>'],\n  runTestsByPath: false,\n  runner: 'jest-runner',\n  setupFiles: ['<rootDir>/setup.js'],\n  setupFilesAfterEnv: ['<rootDir>/testSetupFile.js'],\n  silent: true,\n  skipFilter: false,\n  skipNodeResolution: false,\n  slowTestThreshold: 5,\n  snapshotResolver: '<rootDir>/snapshotResolver.js',\n  snapshotSerializers: ['my-serializer-module'],\n  testEnvironment: 'jest-environment-jsdom',\n  testEnvironmentOptions: {\n    userAgent: 'Agent/007'\n  },\n  testFailureExitCode: 1,\n  testLocationInResults: false,\n  testMatch: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],\n  testNamePattern: 'test signature',\n  testPathIgnorePatterns: [NODE_MODULES_REGEXP],\n  testRegex: (0, _jestValidate().multipleValidOptions)('(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.[jt]sx?$', ['/__tests__/\\\\.test\\\\.[jt]sx?$', '/__tests__/\\\\.spec\\\\.[jt]sx?$']),\n  testResultsProcessor: 'processor-node-module',\n  testRunner: 'jasmine2',\n  testSequencer: '@jest/test-sequencer',\n  testTimeout: 5000,\n  testURL: 'http://localhost',\n  timers: 'real',\n  transform: {\n    '\\\\.js$': '<rootDir>/preprocessor.js'\n  },\n  transformIgnorePatterns: [NODE_MODULES_REGEXP],\n  unmockedModulePathPatterns: ['mock'],\n  updateSnapshot: true,\n  useStderr: false,\n  verbose: false,\n  watch: false,\n  watchPathIgnorePatterns: ['<rootDir>/e2e/'],\n  watchPlugins: ['path/to/yourWatchPlugin', ['jest-watch-typeahead/filename', {\n    key: 'k',\n    prompt: 'do something with my custom prompt'\n  }]],\n  watchman: true\n};\nvar _default = initialOptions;\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-config/build/ValidConfig.js"],"names":["Object","defineProperty","exports","value","default","_jestRegexUtil","data","require","_jestValidate","_constants","NODE_MODULES_REGEXP","replacePathSepForRegex","NODE_MODULES","initialOptions","automock","bail","multipleValidOptions","cache","cacheDirectory","changedFilesWithAncestor","changedSince","clearMocks","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageDirectory","coveragePathIgnorePatterns","coverageProvider","coverageReporters","coverageThreshold","global","branches","functions","lines","statements","dependencyExtractor","displayName","color","name","errorOnDeprecated","expand","extraGlobals","filter","forceCoverageMatch","forceExit","globalSetup","globalTeardown","globals","__DEV__","haste","computeSha1","defaultPlatform","hasteImplModulePath","platforms","throwOnModuleCollision","injectGlobals","json","lastCommit","logHeapUsage","maxConcurrency","maxWorkers","moduleDirectories","moduleFileExtensions","moduleLoader","moduleNameMapper","modulePathIgnorePatterns","modulePaths","noStackTrace","notify","notifyMode","onlyChanged","onlyFailures","preset","prettierPath","projects","reporters","configValue","resetMocks","resetModules","resolver","restoreMocks","rootDir","roots","runTestsByPath","runner","setupFiles","setupFilesAfterEnv","silent","skipFilter","skipNodeResolution","slowTestThreshold","snapshotResolver","snapshotSerializers","testEnvironment","testEnvironmentOptions","userAgent","testFailureExitCode","testLocationInResults","testMatch","testNamePattern","testPathIgnorePatterns","testRegex","testResultsProcessor","testRunner","testSequencer","testTimeout","testURL","timers","transform","transformIgnorePatterns","unmockedModulePathPatterns","updateSnapshot","useStderr","verbose","watch","watchPathIgnorePatterns","watchPlugins","key","prompt","watchman","_default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _constants = require('./constants');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NODE_MODULES_REGEXP = (0, _jestRegexUtil().replacePathSepForRegex)(\n  _constants.NODE_MODULES\n);\nconst initialOptions = {\n  automock: false,\n  bail: (0, _jestValidate().multipleValidOptions)(false, 0),\n  cache: true,\n  cacheDirectory: '/tmp/user/jest',\n  changedFilesWithAncestor: false,\n  changedSince: 'master',\n  clearMocks: false,\n  collectCoverage: true,\n  collectCoverageFrom: ['src', '!public'],\n  collectCoverageOnlyFrom: {\n    '<rootDir>/this-directory-is-covered/Covered.js': true\n  },\n  coverageDirectory: 'coverage',\n  coveragePathIgnorePatterns: [NODE_MODULES_REGEXP],\n  coverageProvider: 'v8',\n  coverageReporters: ['json', 'text', 'lcov', 'clover'],\n  coverageThreshold: {\n    global: {\n      branches: 50,\n      functions: 100,\n      lines: 100,\n      statements: 100\n    }\n  },\n  dependencyExtractor: '<rootDir>/dependencyExtractor.js',\n  displayName: (0, _jestValidate().multipleValidOptions)('test-config', {\n    color: 'blue',\n    name: 'test-config'\n  }),\n  errorOnDeprecated: false,\n  expand: false,\n  extraGlobals: [],\n  filter: '<rootDir>/filter.js',\n  forceCoverageMatch: ['**/*.t.js'],\n  forceExit: false,\n  globalSetup: 'setup.js',\n  globalTeardown: 'teardown.js',\n  globals: {\n    __DEV__: true\n  },\n  haste: {\n    computeSha1: true,\n    defaultPlatform: 'ios',\n    hasteImplModulePath: '<rootDir>/haste_impl.js',\n    platforms: ['ios', 'android'],\n    throwOnModuleCollision: false\n  },\n  injectGlobals: true,\n  json: false,\n  lastCommit: false,\n  logHeapUsage: true,\n  maxConcurrency: 5,\n  maxWorkers: '50%',\n  moduleDirectories: ['node_modules'],\n  moduleFileExtensions: ['js', 'json', 'jsx', 'ts', 'tsx', 'node'],\n  moduleLoader: '<rootDir>',\n  moduleNameMapper: {\n    '^React$': '<rootDir>/node_modules/react'\n  },\n  modulePathIgnorePatterns: ['<rootDir>/build/'],\n  modulePaths: ['/shared/vendor/modules'],\n  name: 'string',\n  noStackTrace: false,\n  notify: false,\n  notifyMode: 'failure-change',\n  onlyChanged: false,\n  onlyFailures: false,\n  preset: 'react-native',\n  prettierPath: '<rootDir>/node_modules/prettier',\n  projects: ['project-a', 'project-b/'],\n  reporters: [\n    'default',\n    'custom-reporter-1',\n    [\n      'custom-reporter-2',\n      {\n        configValue: true\n      }\n    ]\n  ],\n  resetMocks: false,\n  resetModules: false,\n  resolver: '<rootDir>/resolver.js',\n  restoreMocks: false,\n  rootDir: '/',\n  roots: ['<rootDir>'],\n  runTestsByPath: false,\n  runner: 'jest-runner',\n  setupFiles: ['<rootDir>/setup.js'],\n  setupFilesAfterEnv: ['<rootDir>/testSetupFile.js'],\n  silent: true,\n  skipFilter: false,\n  skipNodeResolution: false,\n  slowTestThreshold: 5,\n  snapshotResolver: '<rootDir>/snapshotResolver.js',\n  snapshotSerializers: ['my-serializer-module'],\n  testEnvironment: 'jest-environment-jsdom',\n  testEnvironmentOptions: {\n    userAgent: 'Agent/007'\n  },\n  testFailureExitCode: 1,\n  testLocationInResults: false,\n  testMatch: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],\n  testNamePattern: 'test signature',\n  testPathIgnorePatterns: [NODE_MODULES_REGEXP],\n  testRegex: (0,\n  _jestValidate()\n    .multipleValidOptions)('(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.[jt]sx?$', [\n    '/__tests__/\\\\.test\\\\.[jt]sx?$',\n    '/__tests__/\\\\.spec\\\\.[jt]sx?$'\n  ]),\n  testResultsProcessor: 'processor-node-module',\n  testRunner: 'jasmine2',\n  testSequencer: '@jest/test-sequencer',\n  testTimeout: 5000,\n  testURL: 'http://localhost',\n  timers: 'real',\n  transform: {\n    '\\\\.js$': '<rootDir>/preprocessor.js'\n  },\n  transformIgnorePatterns: [NODE_MODULES_REGEXP],\n  unmockedModulePathPatterns: ['mock'],\n  updateSnapshot: true,\n  useStderr: false,\n  verbose: false,\n  watch: false,\n  watchPathIgnorePatterns: ['<rootDir>/e2e/'],\n  watchPlugins: [\n    'path/to/yourWatchPlugin',\n    [\n      'jest-watch-typeahead/filename',\n      {\n        key: 'k',\n        prompt: 'do something with my custom prompt'\n      }\n    ]\n  ],\n  watchman: true\n};\nvar _default = initialOptions;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}