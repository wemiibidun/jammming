{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst format = value => (0, _prettyFormat().default)(value, {\n  min: true\n});\n\nconst deprecatedOptions = {\n  browser: () => `  Option ${_chalk().default.bold('\"browser\"')} has been deprecated. Please install \"browser-resolve\" and use the \"resolver\" option in Jest configuration as follows:\n  {\n    ${_chalk().default.bold('\"resolver\"')}: ${_chalk().default.bold('\"browser-resolve\"')}\n  }\n  `,\n  mapCoverage: () => `  Option ${_chalk().default.bold('\"mapCoverage\"')} has been removed, as it's no longer necessary.\n\n  Please update your configuration.`,\n  preprocessorIgnorePatterns: options => `  Option ${_chalk().default.bold('\"preprocessorIgnorePatterns\"')} was replaced by ${_chalk().default.bold('\"transformIgnorePatterns\"')}, which support multiple preprocessors.\n\n  Jest now treats your current configuration as:\n  {\n    ${_chalk().default.bold('\"transformIgnorePatterns\"')}: ${_chalk().default.bold(format(options.preprocessorIgnorePatterns))}\n  }\n\n  Please update your configuration.`,\n  scriptPreprocessor: options => `  Option ${_chalk().default.bold('\"scriptPreprocessor\"')} was replaced by ${_chalk().default.bold('\"transform\"')}, which support multiple preprocessors.\n\n  Jest now treats your current configuration as:\n  {\n    ${_chalk().default.bold('\"transform\"')}: ${_chalk().default.bold(`{\".*\": ${format(options.scriptPreprocessor)}}`)}\n  }\n\n  Please update your configuration.`,\n  setupTestFrameworkScriptFile: _options => `  Option ${_chalk().default.bold('\"setupTestFrameworkScriptFile\"')} was replaced by configuration ${_chalk().default.bold('\"setupFilesAfterEnv\"')}, which supports multiple paths.\n\n  Please update your configuration.`,\n  testPathDirs: options => `  Option ${_chalk().default.bold('\"testPathDirs\"')} was replaced by ${_chalk().default.bold('\"roots\"')}.\n\n  Jest now treats your current configuration as:\n  {\n    ${_chalk().default.bold('\"roots\"')}: ${_chalk().default.bold(format(options.testPathDirs))}\n  }\n\n  Please update your configuration.\n  `\n};\nvar _default = deprecatedOptions;\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-config/build/Deprecated.js"],"names":["Object","defineProperty","exports","value","default","_chalk","data","_interopRequireDefault","require","_prettyFormat","obj","__esModule","format","min","deprecatedOptions","browser","bold","mapCoverage","preprocessorIgnorePatterns","options","scriptPreprocessor","setupTestFrameworkScriptFile","_options","testPathDirs","_default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst format = value =>\n  (0, _prettyFormat().default)(value, {\n    min: true\n  });\n\nconst deprecatedOptions = {\n  browser: () => `  Option ${_chalk().default.bold(\n    '\"browser\"'\n  )} has been deprecated. Please install \"browser-resolve\" and use the \"resolver\" option in Jest configuration as follows:\n  {\n    ${_chalk().default.bold('\"resolver\"')}: ${_chalk().default.bold(\n    '\"browser-resolve\"'\n  )}\n  }\n  `,\n  mapCoverage: () => `  Option ${_chalk().default.bold(\n    '\"mapCoverage\"'\n  )} has been removed, as it's no longer necessary.\n\n  Please update your configuration.`,\n  preprocessorIgnorePatterns: options => `  Option ${_chalk().default.bold(\n    '\"preprocessorIgnorePatterns\"'\n  )} was replaced by ${_chalk().default.bold(\n    '\"transformIgnorePatterns\"'\n  )}, which support multiple preprocessors.\n\n  Jest now treats your current configuration as:\n  {\n    ${_chalk().default.bold(\n      '\"transformIgnorePatterns\"'\n    )}: ${_chalk().default.bold(format(options.preprocessorIgnorePatterns))}\n  }\n\n  Please update your configuration.`,\n  scriptPreprocessor: options => `  Option ${_chalk().default.bold(\n    '\"scriptPreprocessor\"'\n  )} was replaced by ${_chalk().default.bold(\n    '\"transform\"'\n  )}, which support multiple preprocessors.\n\n  Jest now treats your current configuration as:\n  {\n    ${_chalk().default.bold('\"transform\"')}: ${_chalk().default.bold(\n    `{\".*\": ${format(options.scriptPreprocessor)}}`\n  )}\n  }\n\n  Please update your configuration.`,\n  setupTestFrameworkScriptFile: _options => `  Option ${_chalk().default.bold(\n    '\"setupTestFrameworkScriptFile\"'\n  )} was replaced by configuration ${_chalk().default.bold(\n    '\"setupFilesAfterEnv\"'\n  )}, which supports multiple paths.\n\n  Please update your configuration.`,\n  testPathDirs: options => `  Option ${_chalk().default.bold(\n    '\"testPathDirs\"'\n  )} was replaced by ${_chalk().default.bold('\"roots\"')}.\n\n  Jest now treats your current configuration as:\n  {\n    ${_chalk().default.bold('\"roots\"')}: ${_chalk().default.bold(\n    format(options.testPathDirs)\n  )}\n  }\n\n  Please update your configuration.\n  `\n};\nvar _default = deprecatedOptions;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}