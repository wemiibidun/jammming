{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _callsites() {\n  const data = _interopRequireDefault(require('callsites'));\n\n  _callsites = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gracefulFs() {\n  const data = require('graceful-fs');\n\n  _gracefulFs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMap() {\n  const data = require('source-map');\n\n  _sourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Copied from https://github.com/rexxars/sourcemap-decorate-callsites/blob/5b9735a156964973a75dc62fd2c7f0c1975458e8/lib/index.js#L113-L158\n\n\nconst addSourceMapConsumer = (callsite, consumer) => {\n  const getLineNumber = callsite.getLineNumber;\n  const getColumnNumber = callsite.getColumnNumber;\n  let position = null;\n\n  function getPosition() {\n    if (!position) {\n      position = consumer.originalPositionFor({\n        column: getColumnNumber.call(callsite) || -1,\n        line: getLineNumber.call(callsite) || -1\n      });\n    }\n\n    return position;\n  }\n\n  Object.defineProperties(callsite, {\n    getColumnNumber: {\n      value() {\n        return getPosition().column || getColumnNumber.call(callsite);\n      },\n\n      writable: false\n    },\n    getLineNumber: {\n      value() {\n        return getPosition().line || getLineNumber.call(callsite);\n      },\n\n      writable: false\n    }\n  });\n};\n\nvar _default = (level, sourceMaps) => {\n  const levelAfterThisCall = level + 1;\n  const stack = (0, _callsites().default)()[levelAfterThisCall];\n  const sourceMapFileName = sourceMaps && sourceMaps[stack.getFileName() || ''];\n\n  if (sourceMapFileName) {\n    try {\n      const sourceMap = (0, _gracefulFs().readFileSync)(sourceMapFileName, 'utf8'); // @ts-expect-error: Not allowed to pass string\n\n      addSourceMapConsumer(stack, new (_sourceMap().SourceMapConsumer)(sourceMap));\n    } catch {// ignore\n    }\n  }\n\n  return stack;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/@jest/source-map/build/getCallsite.js"],"names":["Object","defineProperty","exports","value","default","_callsites","data","_interopRequireDefault","require","_gracefulFs","_sourceMap","obj","__esModule","addSourceMapConsumer","callsite","consumer","getLineNumber","getColumnNumber","position","getPosition","originalPositionFor","column","call","line","defineProperties","writable","_default","level","sourceMaps","levelAfterThisCall","stack","sourceMapFileName","getFileName","sourceMap","readFileSync","SourceMapConsumer"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _callsites() {\n  const data = _interopRequireDefault(require('callsites'));\n\n  _callsites = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gracefulFs() {\n  const data = require('graceful-fs');\n\n  _gracefulFs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMap() {\n  const data = require('source-map');\n\n  _sourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Copied from https://github.com/rexxars/sourcemap-decorate-callsites/blob/5b9735a156964973a75dc62fd2c7f0c1975458e8/lib/index.js#L113-L158\nconst addSourceMapConsumer = (callsite, consumer) => {\n  const getLineNumber = callsite.getLineNumber;\n  const getColumnNumber = callsite.getColumnNumber;\n  let position = null;\n\n  function getPosition() {\n    if (!position) {\n      position = consumer.originalPositionFor({\n        column: getColumnNumber.call(callsite) || -1,\n        line: getLineNumber.call(callsite) || -1\n      });\n    }\n\n    return position;\n  }\n\n  Object.defineProperties(callsite, {\n    getColumnNumber: {\n      value() {\n        return getPosition().column || getColumnNumber.call(callsite);\n      },\n\n      writable: false\n    },\n    getLineNumber: {\n      value() {\n        return getPosition().line || getLineNumber.call(callsite);\n      },\n\n      writable: false\n    }\n  });\n};\n\nvar _default = (level, sourceMaps) => {\n  const levelAfterThisCall = level + 1;\n  const stack = (0, _callsites().default)()[levelAfterThisCall];\n  const sourceMapFileName = sourceMaps && sourceMaps[stack.getFileName() || ''];\n\n  if (sourceMapFileName) {\n    try {\n      const sourceMap = (0, _gracefulFs().readFileSync)(\n        sourceMapFileName,\n        'utf8'\n      ); // @ts-expect-error: Not allowed to pass string\n\n      addSourceMapConsumer(\n        stack,\n        new (_sourceMap().SourceMapConsumer)(sourceMap)\n      );\n    } catch {\n      // ignore\n    }\n  }\n\n  return stack;\n};\n\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}