{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInstrumenter = createInstrumenter;\nObject.defineProperty(exports, \"programVisitor\", {\n  enumerable: true,\n  get: function () {\n    return _visitor.default;\n  }\n});\nObject.defineProperty(exports, \"readInitialCoverage\", {\n  enumerable: true,\n  get: function () {\n    return _readCoverage.default;\n  }\n});\nexports.defaultOpts = void 0;\n\nvar _schema = require(\"@istanbuljs/schema\");\n\nvar _instrumenter = _interopRequireDefault(require(\"./instrumenter\"));\n\nvar _visitor = _interopRequireDefault(require(\"./visitor\"));\n\nvar _readCoverage = _interopRequireDefault(require(\"./read-coverage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * createInstrumenter creates a new instrumenter with the\n * supplied options.\n * @param {Object} opts - instrumenter options. See the documentation\n * for the Instrumenter class.\n */\n\n\nfunction createInstrumenter(opts) {\n  return new _instrumenter.default(opts);\n}\n\nconst defaultOpts = _schema.defaults.instrumenter;\nexports.defaultOpts = defaultOpts;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/istanbul-lib-instrument/dist/index.js"],"names":["Object","defineProperty","exports","value","createInstrumenter","enumerable","get","_visitor","default","_readCoverage","defaultOpts","_schema","require","_instrumenter","_interopRequireDefault","obj","__esModule","opts","defaults","instrumenter"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;AACAJ,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,gBAA/B,EAAiD;AAC/CG,EAAAA,UAAU,EAAE,IADmC;AAE/CC,EAAAA,GAAG,EAAE,YAAY;AACf,WAAOC,QAAQ,CAACC,OAAhB;AACD;AAJ8C,CAAjD;AAMAR,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,qBAA/B,EAAsD;AACpDG,EAAAA,UAAU,EAAE,IADwC;AAEpDC,EAAAA,GAAG,EAAE,YAAY;AACf,WAAOG,aAAa,CAACD,OAArB;AACD;AAJmD,CAAtD;AAMAN,OAAO,CAACQ,WAAR,GAAsB,KAAK,CAA3B;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACF,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,IAAIL,QAAQ,GAAGO,sBAAsB,CAACF,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIH,aAAa,GAAGK,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAA1C;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASX,kBAAT,CAA4Ba,IAA5B,EAAkC;AAChC,SAAO,IAAIJ,aAAa,CAACL,OAAlB,CAA0BS,IAA1B,CAAP;AACD;;AAED,MAAMP,WAAW,GAAGC,OAAO,CAACO,QAAR,CAAiBC,YAArC;AACAjB,OAAO,CAACQ,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInstrumenter = createInstrumenter;\nObject.defineProperty(exports, \"programVisitor\", {\n  enumerable: true,\n  get: function () {\n    return _visitor.default;\n  }\n});\nObject.defineProperty(exports, \"readInitialCoverage\", {\n  enumerable: true,\n  get: function () {\n    return _readCoverage.default;\n  }\n});\nexports.defaultOpts = void 0;\n\nvar _schema = require(\"@istanbuljs/schema\");\n\nvar _instrumenter = _interopRequireDefault(require(\"./instrumenter\"));\n\nvar _visitor = _interopRequireDefault(require(\"./visitor\"));\n\nvar _readCoverage = _interopRequireDefault(require(\"./read-coverage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * createInstrumenter creates a new instrumenter with the\n * supplied options.\n * @param {Object} opts - instrumenter options. See the documentation\n * for the Instrumenter class.\n */\nfunction createInstrumenter(opts) {\n  return new _instrumenter.default(opts);\n}\n\nconst defaultOpts = _schema.defaults.instrumenter;\nexports.defaultOpts = defaultOpts;"]},"metadata":{},"sourceType":"script"}