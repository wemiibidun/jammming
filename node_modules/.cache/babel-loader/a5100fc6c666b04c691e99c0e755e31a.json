{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = nodeModulesPaths;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Adapted from: https://github.com/substack/node-resolve\n */\n\n\nfunction nodeModulesPaths(basedir, options) {\n  const modules = options && options.moduleDirectory ? Array.from(options.moduleDirectory) : ['node_modules']; // ensure that `basedir` is an absolute path at this point,\n  // resolving against the process' current working directory\n\n  const basedirAbs = path().resolve(basedir);\n  let prefix = '/';\n\n  if (/^([A-Za-z]:)/.test(basedirAbs)) {\n    prefix = '';\n  } else if (/^\\\\\\\\/.test(basedirAbs)) {\n    prefix = '\\\\\\\\';\n  } // The node resolution algorithm (as implemented by NodeJS and TypeScript)\n  // traverses parents of the physical path, not the symlinked path\n\n\n  let physicalBasedir;\n\n  try {\n    physicalBasedir = (0, _jestUtil().tryRealpath)(basedirAbs);\n  } catch {\n    // realpath can throw, e.g. on mapped drives\n    physicalBasedir = basedirAbs;\n  }\n\n  const paths = [physicalBasedir];\n  let parsed = path().parse(physicalBasedir);\n\n  while (parsed.dir !== paths[paths.length - 1]) {\n    paths.push(parsed.dir);\n    parsed = path().parse(parsed.dir);\n  }\n\n  const dirs = paths.reduce((dirs, aPath) => dirs.concat(modules.map(moduleDir => path().isAbsolute(moduleDir) ? aPath === basedirAbs ? moduleDir : '' : path().join(prefix, aPath, moduleDir))), []).filter(dir => dir !== '');\n  return options.paths ? dirs.concat(options.paths) : dirs;\n}","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-config/node_modules/jest-resolve/build/nodeModulesPaths.js"],"names":["Object","defineProperty","exports","value","default","nodeModulesPaths","path","data","_interopRequireWildcard","require","_jestUtil","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","basedir","options","modules","moduleDirectory","Array","from","basedirAbs","resolve","prefix","test","physicalBasedir","tryRealpath","paths","parsed","parse","dir","length","push","dirs","reduce","aPath","concat","map","moduleDir","isAbsolute","join","filter"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = nodeModulesPaths;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Adapted from: https://github.com/substack/node-resolve\n */\nfunction nodeModulesPaths(basedir, options) {\n  const modules =\n    options && options.moduleDirectory\n      ? Array.from(options.moduleDirectory)\n      : ['node_modules']; // ensure that `basedir` is an absolute path at this point,\n  // resolving against the process' current working directory\n\n  const basedirAbs = path().resolve(basedir);\n  let prefix = '/';\n\n  if (/^([A-Za-z]:)/.test(basedirAbs)) {\n    prefix = '';\n  } else if (/^\\\\\\\\/.test(basedirAbs)) {\n    prefix = '\\\\\\\\';\n  } // The node resolution algorithm (as implemented by NodeJS and TypeScript)\n  // traverses parents of the physical path, not the symlinked path\n\n  let physicalBasedir;\n\n  try {\n    physicalBasedir = (0, _jestUtil().tryRealpath)(basedirAbs);\n  } catch {\n    // realpath can throw, e.g. on mapped drives\n    physicalBasedir = basedirAbs;\n  }\n\n  const paths = [physicalBasedir];\n  let parsed = path().parse(physicalBasedir);\n\n  while (parsed.dir !== paths[paths.length - 1]) {\n    paths.push(parsed.dir);\n    parsed = path().parse(parsed.dir);\n  }\n\n  const dirs = paths\n    .reduce(\n      (dirs, aPath) =>\n        dirs.concat(\n          modules.map(moduleDir =>\n            path().isAbsolute(moduleDir)\n              ? aPath === basedirAbs\n                ? moduleDir\n                : ''\n              : path().join(prefix, aPath, moduleDir)\n          )\n        ),\n      []\n    )\n    .filter(dir => dir !== '');\n  return options.paths ? dirs.concat(options.paths) : dirs;\n}\n"]},"metadata":{},"sourceType":"script"}