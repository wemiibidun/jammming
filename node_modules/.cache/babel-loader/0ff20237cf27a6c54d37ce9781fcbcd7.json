{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.buildSnapshotResolver = exports.isSnapshotPath = exports.DOT_EXTENSION = exports.EXTENSION = void 0;\n\nvar path = _interopRequireWildcard(require('path'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst EXTENSION = 'snap';\nexports.EXTENSION = EXTENSION;\nconst DOT_EXTENSION = '.' + EXTENSION;\nexports.DOT_EXTENSION = DOT_EXTENSION;\n\nconst isSnapshotPath = path => path.endsWith(DOT_EXTENSION);\n\nexports.isSnapshotPath = isSnapshotPath;\nconst cache = new Map();\n\nconst buildSnapshotResolver = config => {\n  const key = config.rootDir;\n\n  if (!cache.has(key)) {\n    cache.set(key, createSnapshotResolver(config.snapshotResolver));\n  }\n\n  return cache.get(key);\n};\n\nexports.buildSnapshotResolver = buildSnapshotResolver;\n\nfunction createSnapshotResolver(snapshotResolverPath) {\n  return typeof snapshotResolverPath === 'string' ? createCustomSnapshotResolver(snapshotResolverPath) : createDefaultSnapshotResolver();\n}\n\nfunction createDefaultSnapshotResolver() {\n  return {\n    resolveSnapshotPath: testPath => path.join(path.join(path.dirname(testPath), '__snapshots__'), path.basename(testPath) + DOT_EXTENSION),\n    resolveTestPath: snapshotPath => path.resolve(path.dirname(snapshotPath), '..', path.basename(snapshotPath, DOT_EXTENSION)),\n    testPathForConsistencyCheck: path.posix.join('consistency_check', '__tests__', 'example.test.js')\n  };\n}\n\nfunction createCustomSnapshotResolver(snapshotResolverPath) {\n  const custom = require(snapshotResolverPath);\n\n  const keys = [['resolveSnapshotPath', 'function'], ['resolveTestPath', 'function'], ['testPathForConsistencyCheck', 'string']];\n  keys.forEach(([propName, requiredType]) => {\n    if (typeof custom[propName] !== requiredType) {\n      throw new TypeError(mustImplement(propName, requiredType));\n    }\n  });\n  const customResolver = {\n    resolveSnapshotPath: testPath => custom.resolveSnapshotPath(testPath, DOT_EXTENSION),\n    resolveTestPath: snapshotPath => custom.resolveTestPath(snapshotPath, DOT_EXTENSION),\n    testPathForConsistencyCheck: custom.testPathForConsistencyCheck\n  };\n  verifyConsistentTransformations(customResolver);\n  return customResolver;\n}\n\nfunction mustImplement(propName, requiredType) {\n  return _chalk.default.bold(`Custom snapshot resolver must implement a \\`${propName}\\` as a ${requiredType}.`) + '\\nDocumentation: https://facebook.github.io/jest/docs/en/configuration.html#snapshotResolver';\n}\n\nfunction verifyConsistentTransformations(custom) {\n  const resolvedSnapshotPath = custom.resolveSnapshotPath(custom.testPathForConsistencyCheck);\n  const resolvedTestPath = custom.resolveTestPath(resolvedSnapshotPath);\n\n  if (resolvedTestPath !== custom.testPathForConsistencyCheck) {\n    throw new Error(_chalk.default.bold(`Custom snapshot resolver functions must transform paths consistently, i.e. expects resolveTestPath(resolveSnapshotPath('${custom.testPathForConsistencyCheck}')) === ${resolvedTestPath}`));\n  }\n}","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-snapshot/build/SnapshotResolver.js"],"names":["Object","defineProperty","exports","value","buildSnapshotResolver","isSnapshotPath","DOT_EXTENSION","EXTENSION","path","_interopRequireWildcard","require","_chalk","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","endsWith","Map","config","rootDir","createSnapshotResolver","snapshotResolver","snapshotResolverPath","createCustomSnapshotResolver","createDefaultSnapshotResolver","resolveSnapshotPath","testPath","join","dirname","basename","resolveTestPath","snapshotPath","resolve","testPathForConsistencyCheck","posix","custom","keys","forEach","propName","requiredType","TypeError","mustImplement","customResolver","verifyConsistentTransformations","bold","resolvedSnapshotPath","resolvedTestPath","Error"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.buildSnapshotResolver = exports.isSnapshotPath = exports.DOT_EXTENSION = exports.EXTENSION = void 0;\n\nvar path = _interopRequireWildcard(require('path'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst EXTENSION = 'snap';\nexports.EXTENSION = EXTENSION;\nconst DOT_EXTENSION = '.' + EXTENSION;\nexports.DOT_EXTENSION = DOT_EXTENSION;\n\nconst isSnapshotPath = path => path.endsWith(DOT_EXTENSION);\n\nexports.isSnapshotPath = isSnapshotPath;\nconst cache = new Map();\n\nconst buildSnapshotResolver = config => {\n  const key = config.rootDir;\n\n  if (!cache.has(key)) {\n    cache.set(key, createSnapshotResolver(config.snapshotResolver));\n  }\n\n  return cache.get(key);\n};\n\nexports.buildSnapshotResolver = buildSnapshotResolver;\n\nfunction createSnapshotResolver(snapshotResolverPath) {\n  return typeof snapshotResolverPath === 'string'\n    ? createCustomSnapshotResolver(snapshotResolverPath)\n    : createDefaultSnapshotResolver();\n}\n\nfunction createDefaultSnapshotResolver() {\n  return {\n    resolveSnapshotPath: testPath =>\n      path.join(\n        path.join(path.dirname(testPath), '__snapshots__'),\n        path.basename(testPath) + DOT_EXTENSION\n      ),\n    resolveTestPath: snapshotPath =>\n      path.resolve(\n        path.dirname(snapshotPath),\n        '..',\n        path.basename(snapshotPath, DOT_EXTENSION)\n      ),\n    testPathForConsistencyCheck: path.posix.join(\n      'consistency_check',\n      '__tests__',\n      'example.test.js'\n    )\n  };\n}\n\nfunction createCustomSnapshotResolver(snapshotResolverPath) {\n  const custom = require(snapshotResolverPath);\n\n  const keys = [\n    ['resolveSnapshotPath', 'function'],\n    ['resolveTestPath', 'function'],\n    ['testPathForConsistencyCheck', 'string']\n  ];\n  keys.forEach(([propName, requiredType]) => {\n    if (typeof custom[propName] !== requiredType) {\n      throw new TypeError(mustImplement(propName, requiredType));\n    }\n  });\n  const customResolver = {\n    resolveSnapshotPath: testPath =>\n      custom.resolveSnapshotPath(testPath, DOT_EXTENSION),\n    resolveTestPath: snapshotPath =>\n      custom.resolveTestPath(snapshotPath, DOT_EXTENSION),\n    testPathForConsistencyCheck: custom.testPathForConsistencyCheck\n  };\n  verifyConsistentTransformations(customResolver);\n  return customResolver;\n}\n\nfunction mustImplement(propName, requiredType) {\n  return (\n    _chalk.default.bold(\n      `Custom snapshot resolver must implement a \\`${propName}\\` as a ${requiredType}.`\n    ) +\n    '\\nDocumentation: https://facebook.github.io/jest/docs/en/configuration.html#snapshotResolver'\n  );\n}\n\nfunction verifyConsistentTransformations(custom) {\n  const resolvedSnapshotPath = custom.resolveSnapshotPath(\n    custom.testPathForConsistencyCheck\n  );\n  const resolvedTestPath = custom.resolveTestPath(resolvedSnapshotPath);\n\n  if (resolvedTestPath !== custom.testPathForConsistencyCheck) {\n    throw new Error(\n      _chalk.default.bold(\n        `Custom snapshot resolver functions must transform paths consistently, i.e. expects resolveTestPath(resolveSnapshotPath('${custom.testPathForConsistencyCheck}')) === ${resolvedTestPath}`\n      )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}