{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = setFromArgv;\n\nvar _utils = require('./utils');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst specialArgs = ['_', '$0', 'h', 'help', 'config'];\n\nfunction setFromArgv(options, argv) {\n  const argvToOptions = Object.keys(argv).filter(key => argv[key] !== undefined && specialArgs.indexOf(key) === -1).reduce((options, key) => {\n    switch (key) {\n      case 'coverage':\n        options.collectCoverage = argv[key];\n        break;\n\n      case 'json':\n        options.useStderr = argv[key];\n        break;\n\n      case 'watchAll':\n        options.watch = false;\n        options.watchAll = argv[key];\n        break;\n\n      case 'env':\n        options.testEnvironment = argv[key];\n        break;\n\n      case 'config':\n        break;\n\n      case 'coverageThreshold':\n      case 'globals':\n      case 'moduleNameMapper':\n      case 'transform':\n      case 'haste':\n        const str = argv[key];\n\n        if ((0, _utils.isJSONString)(str)) {\n          options[key] = JSON.parse(str);\n        }\n\n        break;\n\n      default:\n        options[key] = argv[key];\n    }\n\n    return options;\n  }, {});\n  return { ...options,\n    ...((0, _utils.isJSONString)(argv.config) ? JSON.parse(argv.config) : null),\n    ...argvToOptions\n  };\n}","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-config/build/setFromArgv.js"],"names":["Object","defineProperty","exports","value","default","setFromArgv","_utils","require","specialArgs","options","argv","argvToOptions","keys","filter","key","undefined","indexOf","reduce","collectCoverage","useStderr","watch","watchAll","testEnvironment","str","isJSONString","JSON","parse","config"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,MAAjB,EAAyB,QAAzB,CAApB;;AAEA,SAASH,WAAT,CAAqBI,OAArB,EAA8BC,IAA9B,EAAoC;AAClC,QAAMC,aAAa,GAAGX,MAAM,CAACY,IAAP,CAAYF,IAAZ,EACnBG,MADmB,CACZC,GAAG,IAAIJ,IAAI,CAACI,GAAD,CAAJ,KAAcC,SAAd,IAA2BP,WAAW,CAACQ,OAAZ,CAAoBF,GAApB,MAA6B,CAAC,CADpD,EAEnBG,MAFmB,CAEZ,CAACR,OAAD,EAAUK,GAAV,KAAkB;AACxB,YAAQA,GAAR;AACE,WAAK,UAAL;AACEL,QAAAA,OAAO,CAACS,eAAR,GAA0BR,IAAI,CAACI,GAAD,CAA9B;AACA;;AAEF,WAAK,MAAL;AACEL,QAAAA,OAAO,CAACU,SAAR,GAAoBT,IAAI,CAACI,GAAD,CAAxB;AACA;;AAEF,WAAK,UAAL;AACEL,QAAAA,OAAO,CAACW,KAAR,GAAgB,KAAhB;AACAX,QAAAA,OAAO,CAACY,QAAR,GAAmBX,IAAI,CAACI,GAAD,CAAvB;AACA;;AAEF,WAAK,KAAL;AACEL,QAAAA,OAAO,CAACa,eAAR,GAA0BZ,IAAI,CAACI,GAAD,CAA9B;AACA;;AAEF,WAAK,QAAL;AACE;;AAEF,WAAK,mBAAL;AACA,WAAK,SAAL;AACA,WAAK,kBAAL;AACA,WAAK,WAAL;AACA,WAAK,OAAL;AACE,cAAMS,GAAG,GAAGb,IAAI,CAACI,GAAD,CAAhB;;AAEA,YAAI,CAAC,GAAGR,MAAM,CAACkB,YAAX,EAAyBD,GAAzB,CAAJ,EAAmC;AACjCd,UAAAA,OAAO,CAACK,GAAD,CAAP,GAAeW,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAf;AACD;;AAED;;AAEF;AACEd,QAAAA,OAAO,CAACK,GAAD,CAAP,GAAeJ,IAAI,CAACI,GAAD,CAAnB;AAnCJ;;AAsCA,WAAOL,OAAP;AACD,GA1CmB,EA0CjB,EA1CiB,CAAtB;AA2CA,SAAO,EACL,GAAGA,OADE;AAEL,QAAI,CAAC,GAAGH,MAAM,CAACkB,YAAX,EAAyBd,IAAI,CAACiB,MAA9B,IAAwCF,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACiB,MAAhB,CAAxC,GAAkE,IAAtE,CAFK;AAGL,OAAGhB;AAHE,GAAP;AAKD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = setFromArgv;\n\nvar _utils = require('./utils');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst specialArgs = ['_', '$0', 'h', 'help', 'config'];\n\nfunction setFromArgv(options, argv) {\n  const argvToOptions = Object.keys(argv)\n    .filter(key => argv[key] !== undefined && specialArgs.indexOf(key) === -1)\n    .reduce((options, key) => {\n      switch (key) {\n        case 'coverage':\n          options.collectCoverage = argv[key];\n          break;\n\n        case 'json':\n          options.useStderr = argv[key];\n          break;\n\n        case 'watchAll':\n          options.watch = false;\n          options.watchAll = argv[key];\n          break;\n\n        case 'env':\n          options.testEnvironment = argv[key];\n          break;\n\n        case 'config':\n          break;\n\n        case 'coverageThreshold':\n        case 'globals':\n        case 'moduleNameMapper':\n        case 'transform':\n        case 'haste':\n          const str = argv[key];\n\n          if ((0, _utils.isJSONString)(str)) {\n            options[key] = JSON.parse(str);\n          }\n\n          break;\n\n        default:\n          options[key] = argv[key];\n      }\n\n      return options;\n    }, {});\n  return {\n    ...options,\n    ...((0, _utils.isJSONString)(argv.config) ? JSON.parse(argv.config) : null),\n    ...argvToOptions\n  };\n}\n"]},"metadata":{},"sourceType":"script"}