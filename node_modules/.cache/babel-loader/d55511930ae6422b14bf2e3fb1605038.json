{"ast":null,"code":"import _classCallCheck from\"/Users/wemi/jammming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/wemi/jammming/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/wemi/jammming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/wemi/jammming/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/wemi/jammming/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./App.css';import SearchBar from'../SearchBar/SearchBar';import SearchResults from'../SearchResults/SearchResults';import Playlist from'../Playlist/Playlist';import Spotify from'../../util/Spotify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={searchResults:[],playlistName:'My Playlist',playlistTracks:[]};_this.addTrack=_this.addTrack.bind(_assertThisInitialized(_this));_this.removeTrack=_this.removeTrack.bind(_assertThisInitialized(_this));_this.updatePlaylistName=_this.updatePlaylistName.bind(_assertThisInitialized(_this));_this.savePlaylist=_this.savePlaylist.bind(_assertThisInitialized(_this));_this.search=_this.search.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"addTrack\",value:function addTrack(track){var tracks=this.state.playlistTracks;if(this.state.playlistTracks.find(function(savedTrack){return savedTrack.id===track.id;})){return;}tracks.push(track);this.setState({playlistTracks:tracks});}},{key:\"removeTrack\",value:function removeTrack(track){var tracks=this.state.playlistTracks;tracks=tracks.filter(function(currentTrack){return currentTrack.id!==track.id;});this.setState({playlistTracks:tracks});}},{key:\"updatePlaylistName\",value:function updatePlaylistName(name){this.setState({playlistTracks:name});}},{key:\"savePlaylist\",value:function savePlaylist(){var _this2=this;var trackUris=this.state.playlistTracks.map(function(track){return track.uri;});Spotify.savePlaylist(this.state.playlistName,trackUris).then(function(){_this2.setState({playlistName:'New Playlist',playlistTracks:[]});});}},{key:\"search\",value:function search(term){var _this3=this;Spotify.search(term).then(function(searchResults){_this3.setState({searchResults:searchResults});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ja\",/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:\"mmm\"}),\"ing\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:this.search}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:this.state.searchResults,onAdd:this.addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:this.state.playlistName,playlistTracks:this.state.playlistTracks,onRemove:this.removeTrack,onNameChange:this.updatePlaylistName,onSave:this.savePlaylist})]})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/wemi/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","currentTrack","name","trackUris","map","uri","then","term","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    \n\n    this.state = {\n      searchResults:[],\n      playlistName: 'My Playlist',\n      playlistTracks: []\n    };\n\n    \n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n    addTrack (track) {\n\n      let tracks = this.state.playlistTracks;\n      if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n        return;\n      }\n      tracks.push(track);\n      this.setState({playlistTracks:tracks})\n    }\n\n\n    removeTrack (track) {\n      let tracks = this.state.playlistTracks;\n      tracks = tracks.filter(currentTrack => currentTrack.id !== track.id)\n\n      this.setState({playlistTracks : tracks});\n\n    }\n\n    updatePlaylistName (name) {\n      this.setState({playlistTracks: name});\n\n    }\n\n    savePlaylist () {\n     const trackUris = this.state.playlistTracks.map(track => track.uri);\n     Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n       this.setState({\n         playlistName: 'New Playlist',\n         playlistTracks: []\n       })\n     })\n    }\n\n    search (term) {\n       Spotify.search(term).then(searchResults =>  {\n         this.setState({searchResults: searchResults})\n\n       })\n     }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n\n        <div className=\"App\">\n          <SearchBar onSearch = {this.search}/>\n        <div className=\"App-playlist\">\n          <SearchResults searchResults = {this.state.searchResults} onAdd = {this.addTrack}/>\n          <Playlist playlistName = {this.state.playlistName}\n          playlistTracks = {this.state.playlistTracks}\n          onRemove = {this.removeTrack}\n          onNameChange = {this.updatePlaylistName}\n          onSave = {this.savePlaylist} />\n        </div>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}