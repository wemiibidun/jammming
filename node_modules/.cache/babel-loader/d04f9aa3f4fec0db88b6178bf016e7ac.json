{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = validateCLIOptions;\nexports.DOCUMENTATION_NOTE = void 0;\n\nfunction _camelcase() {\n  const data = _interopRequireDefault(require('camelcase'));\n\n  _camelcase = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _defaultConfig = _interopRequireDefault(require('./defaultConfig'));\n\nvar _deprecated = require('./deprecated');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst BULLET = _chalk().default.bold('\\u25cf');\n\nconst DOCUMENTATION_NOTE = `  ${_chalk().default.bold('CLI Options Documentation:')}\n  https://jestjs.io/docs/en/cli.html\n`;\nexports.DOCUMENTATION_NOTE = DOCUMENTATION_NOTE;\n\nconst createCLIValidationError = (unrecognizedOptions, allowedOptions) => {\n  let title = `${BULLET} Unrecognized CLI Parameter`;\n  let message;\n  const comment = `  ${_chalk().default.bold('CLI Options Documentation')}:\\n` + `  https://jestjs.io/docs/en/cli.html\\n`;\n\n  if (unrecognizedOptions.length === 1) {\n    const unrecognized = unrecognizedOptions[0];\n    const didYouMeanMessage = unrecognized.length > 1 ? (0, _utils.createDidYouMeanMessage)(unrecognized, Array.from(allowedOptions)) : '';\n    message = `  Unrecognized option ${_chalk().default.bold((0, _utils.format)(unrecognized))}.` + (didYouMeanMessage ? ` ${didYouMeanMessage}` : '');\n  } else {\n    title += 's';\n    message = `  Following options were not recognized:\\n` + `  ${_chalk().default.bold((0, _utils.format)(unrecognizedOptions))}`;\n  }\n\n  return new _utils.ValidationError(title, message, comment);\n};\n\nconst logDeprecatedOptions = (deprecatedOptions, deprecationEntries, argv) => {\n  deprecatedOptions.forEach(opt => {\n    (0, _deprecated.deprecationWarning)(argv, opt, deprecationEntries, { ..._defaultConfig.default,\n      comment: DOCUMENTATION_NOTE\n    });\n  });\n};\n\nfunction validateCLIOptions(argv, options, rawArgv = []) {\n  const yargsSpecialOptions = ['$0', '_', 'help', 'h'];\n  const deprecationEntries = options.deprecationEntries || {};\n  const allowedOptions = Object.keys(options).reduce((acc, option) => acc.add(option).add(options[option].alias || option), new Set(yargsSpecialOptions));\n  const unrecognizedOptions = Object.keys(argv).filter(arg => !allowedOptions.has((0, _camelcase().default)(arg)) && !allowedOptions.has(arg) && (!rawArgv.length || rawArgv.includes(arg)), []);\n\n  if (unrecognizedOptions.length) {\n    throw createCLIValidationError(unrecognizedOptions, allowedOptions);\n  }\n\n  const CLIDeprecations = Object.keys(deprecationEntries).reduce((acc, entry) => {\n    if (options[entry]) {\n      acc[entry] = deprecationEntries[entry];\n      const alias = options[entry].alias;\n\n      if (alias) {\n        acc[alias] = deprecationEntries[entry];\n      }\n    }\n\n    return acc;\n  }, {});\n  const deprecations = new Set(Object.keys(CLIDeprecations));\n  const deprecatedOptions = Object.keys(argv).filter(arg => deprecations.has(arg) && argv[arg] != null);\n\n  if (deprecatedOptions.length) {\n    logDeprecatedOptions(deprecatedOptions, CLIDeprecations, argv);\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-validate/build/validateCLIOptions.js"],"names":["Object","defineProperty","exports","value","default","validateCLIOptions","DOCUMENTATION_NOTE","_camelcase","data","_interopRequireDefault","require","_chalk","_defaultConfig","_deprecated","_utils","obj","__esModule","BULLET","bold","createCLIValidationError","unrecognizedOptions","allowedOptions","title","message","comment","length","unrecognized","didYouMeanMessage","createDidYouMeanMessage","Array","from","format","ValidationError","logDeprecatedOptions","deprecatedOptions","deprecationEntries","argv","forEach","opt","deprecationWarning","options","rawArgv","yargsSpecialOptions","keys","reduce","acc","option","add","alias","Set","filter","arg","has","includes","CLIDeprecations","entry","deprecations"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = validateCLIOptions;\nexports.DOCUMENTATION_NOTE = void 0;\n\nfunction _camelcase() {\n  const data = _interopRequireDefault(require('camelcase'));\n\n  _camelcase = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _defaultConfig = _interopRequireDefault(require('./defaultConfig'));\n\nvar _deprecated = require('./deprecated');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst BULLET = _chalk().default.bold('\\u25cf');\n\nconst DOCUMENTATION_NOTE = `  ${_chalk().default.bold(\n  'CLI Options Documentation:'\n)}\n  https://jestjs.io/docs/en/cli.html\n`;\nexports.DOCUMENTATION_NOTE = DOCUMENTATION_NOTE;\n\nconst createCLIValidationError = (unrecognizedOptions, allowedOptions) => {\n  let title = `${BULLET} Unrecognized CLI Parameter`;\n  let message;\n  const comment =\n    `  ${_chalk().default.bold('CLI Options Documentation')}:\\n` +\n    `  https://jestjs.io/docs/en/cli.html\\n`;\n\n  if (unrecognizedOptions.length === 1) {\n    const unrecognized = unrecognizedOptions[0];\n    const didYouMeanMessage =\n      unrecognized.length > 1\n        ? (0, _utils.createDidYouMeanMessage)(\n            unrecognized,\n            Array.from(allowedOptions)\n          )\n        : '';\n    message =\n      `  Unrecognized option ${_chalk().default.bold(\n        (0, _utils.format)(unrecognized)\n      )}.` + (didYouMeanMessage ? ` ${didYouMeanMessage}` : '');\n  } else {\n    title += 's';\n    message =\n      `  Following options were not recognized:\\n` +\n      `  ${_chalk().default.bold((0, _utils.format)(unrecognizedOptions))}`;\n  }\n\n  return new _utils.ValidationError(title, message, comment);\n};\n\nconst logDeprecatedOptions = (deprecatedOptions, deprecationEntries, argv) => {\n  deprecatedOptions.forEach(opt => {\n    (0, _deprecated.deprecationWarning)(argv, opt, deprecationEntries, {\n      ..._defaultConfig.default,\n      comment: DOCUMENTATION_NOTE\n    });\n  });\n};\n\nfunction validateCLIOptions(argv, options, rawArgv = []) {\n  const yargsSpecialOptions = ['$0', '_', 'help', 'h'];\n  const deprecationEntries = options.deprecationEntries || {};\n  const allowedOptions = Object.keys(options).reduce(\n    (acc, option) => acc.add(option).add(options[option].alias || option),\n    new Set(yargsSpecialOptions)\n  );\n  const unrecognizedOptions = Object.keys(argv).filter(\n    arg =>\n      !allowedOptions.has((0, _camelcase().default)(arg)) &&\n      !allowedOptions.has(arg) &&\n      (!rawArgv.length || rawArgv.includes(arg)),\n    []\n  );\n\n  if (unrecognizedOptions.length) {\n    throw createCLIValidationError(unrecognizedOptions, allowedOptions);\n  }\n\n  const CLIDeprecations = Object.keys(deprecationEntries).reduce(\n    (acc, entry) => {\n      if (options[entry]) {\n        acc[entry] = deprecationEntries[entry];\n        const alias = options[entry].alias;\n\n        if (alias) {\n          acc[alias] = deprecationEntries[entry];\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n  const deprecations = new Set(Object.keys(CLIDeprecations));\n  const deprecatedOptions = Object.keys(argv).filter(\n    arg => deprecations.has(arg) && argv[arg] != null\n  );\n\n  if (deprecatedOptions.length) {\n    logDeprecatedOptions(deprecatedOptions, CLIDeprecations, argv);\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}