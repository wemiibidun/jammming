{"ast":null,"code":"var _jsxFileName = \"/Users/wemi/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My Playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistTracks: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.PlaylistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wemi/jammming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","currentTrack","name","trackUris","map","uri","PlaylistName","then","term","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    \n\n    this.state = {\n      searchResults:[],\n      playlistName: 'My Playlist',\n      playlistTracks: []\n    };\n\n    \n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n    addTrack (track) {\n\n      let tracks = this.state.playlistTracks;\n      if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n        return;\n      }\n      tracks.push(track);\n      this.setState({playlistTracks:tracks})\n    }\n\n\n    removeTrack (track) {\n      let tracks = this.state.playlistTracks;\n      tracks = tracks.filter(currentTrack => currentTrack.id !== track.id)\n\n      this.setState({playlistTracks : tracks});\n\n    }\n\n    updatePlaylistName (name) {\n      this.setState({playlistTracks: name});\n\n    }\n\n    savePlaylist () {\n     const trackUris = this.state.playlistTracks.map(track => track.uri);\n     Spotify.savePlaylist(this.state.PlaylistName, trackUris).then(() => {\n       this.setState({\n         playlistName: 'New Playlist',\n         playlistTracks: []\n       })\n     })\n    }\n\n    search (term) {\n       Spotify.search(term).then(searchResults =>{\n         this.setState({searchResults: searchResults})\n\n       })\n     }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n\n        <div className=\"App\">\n          <SearchBar />\n        <div className=\"App-playlist\">\n          <SearchResults searchResults = {this.state.searchResults} onAdd = {this.addTrack}/>\n          <Playlist playlistName = {this.state.playlistName}\n          playlistTracks = {this.state.playlistTracks}\n          onRemove = {this.removeTrack}\n          onNameChange = {this.updatePlaylistName}\n          onSave = {this.savePlaylist}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}