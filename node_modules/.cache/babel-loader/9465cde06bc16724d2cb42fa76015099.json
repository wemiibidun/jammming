{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _defaultConfig = _interopRequireDefault(require('./defaultConfig'));\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nlet hasDeprecationWarnings = false;\n\nconst shouldSkipValidationForPath = (path, key, denylist) => denylist ? denylist.includes([...path, key].join('.')) : false;\n\nconst _validate = (config, exampleConfig, options, path = []) => {\n  if (typeof config !== 'object' || config == null || typeof exampleConfig !== 'object' || exampleConfig == null) {\n    return {\n      hasDeprecationWarnings\n    };\n  }\n\n  for (const key in config) {\n    if (options.deprecatedConfig && key in options.deprecatedConfig && typeof options.deprecate === 'function') {\n      const isDeprecatedKey = options.deprecate(config, key, options.deprecatedConfig, options);\n      hasDeprecationWarnings = hasDeprecationWarnings || isDeprecatedKey;\n    } else if (allowsMultipleTypes(key)) {\n      const value = config[key];\n\n      if (typeof options.condition === 'function' && typeof options.error === 'function') {\n        if (key === 'maxWorkers' && !isOfTypeStringOrNumber(value)) {\n          throw new _utils.ValidationError('Validation Error', `${key} has to be of type string or number`, `maxWorkers=50% or\\nmaxWorkers=3`);\n        }\n      }\n    } else if (Object.hasOwnProperty.call(exampleConfig, key)) {\n      if (typeof options.condition === 'function' && typeof options.error === 'function' && !options.condition(config[key], exampleConfig[key])) {\n        options.error(key, config[key], exampleConfig[key], options, path);\n      }\n    } else if (shouldSkipValidationForPath(path, key, options.recursiveDenylist || options.recursiveBlacklist)) {// skip validating unknown options inside blacklisted paths\n    } else {\n      options.unknown && options.unknown(config, exampleConfig, key, options, path);\n    }\n\n    if (options.recursive && !Array.isArray(exampleConfig[key]) && (options.recursiveDenylist || options.recursiveBlacklist) && !shouldSkipValidationForPath(path, key, options.recursiveDenylist || options.recursiveBlacklist)) {\n      _validate(config[key], exampleConfig[key], options, [...path, key]);\n    }\n  }\n\n  return {\n    hasDeprecationWarnings\n  };\n};\n\nconst allowsMultipleTypes = key => key === 'maxWorkers';\n\nconst isOfTypeStringOrNumber = value => typeof value === 'number' || typeof value === 'string';\n\nconst validate = (config, options) => {\n  hasDeprecationWarnings = false; // Preserve default denylist entries even with user-supplied denylist\n\n  const combinedDenylist = [...(_defaultConfig.default.recursiveDenylist || []), ...(options.recursiveDenylist || options.recursiveBlacklist || [])];\n  const defaultedOptions = Object.assign({ ..._defaultConfig.default,\n    ...options,\n    recursiveDenylist: combinedDenylist,\n    title: options.title || _defaultConfig.default.title\n  });\n\n  const {\n    hasDeprecationWarnings: hdw\n  } = _validate(config, options.exampleConfig, defaultedOptions);\n\n  return {\n    hasDeprecationWarnings: hdw,\n    isValid: true\n  };\n};\n\nvar _default = validate;\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-validate/build/validate.js"],"names":["Object","defineProperty","exports","value","default","_defaultConfig","_interopRequireDefault","require","_utils","obj","__esModule","hasDeprecationWarnings","shouldSkipValidationForPath","path","key","denylist","includes","join","_validate","config","exampleConfig","options","deprecatedConfig","deprecate","isDeprecatedKey","allowsMultipleTypes","condition","error","isOfTypeStringOrNumber","ValidationError","hasOwnProperty","call","recursiveDenylist","recursiveBlacklist","unknown","recursive","Array","isArray","validate","combinedDenylist","defaultedOptions","assign","title","hdw","isValid","_default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _defaultConfig = _interopRequireDefault(require('./defaultConfig'));\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nlet hasDeprecationWarnings = false;\n\nconst shouldSkipValidationForPath = (path, key, denylist) =>\n  denylist ? denylist.includes([...path, key].join('.')) : false;\n\nconst _validate = (config, exampleConfig, options, path = []) => {\n  if (\n    typeof config !== 'object' ||\n    config == null ||\n    typeof exampleConfig !== 'object' ||\n    exampleConfig == null\n  ) {\n    return {\n      hasDeprecationWarnings\n    };\n  }\n\n  for (const key in config) {\n    if (\n      options.deprecatedConfig &&\n      key in options.deprecatedConfig &&\n      typeof options.deprecate === 'function'\n    ) {\n      const isDeprecatedKey = options.deprecate(\n        config,\n        key,\n        options.deprecatedConfig,\n        options\n      );\n      hasDeprecationWarnings = hasDeprecationWarnings || isDeprecatedKey;\n    } else if (allowsMultipleTypes(key)) {\n      const value = config[key];\n\n      if (\n        typeof options.condition === 'function' &&\n        typeof options.error === 'function'\n      ) {\n        if (key === 'maxWorkers' && !isOfTypeStringOrNumber(value)) {\n          throw new _utils.ValidationError(\n            'Validation Error',\n            `${key} has to be of type string or number`,\n            `maxWorkers=50% or\\nmaxWorkers=3`\n          );\n        }\n      }\n    } else if (Object.hasOwnProperty.call(exampleConfig, key)) {\n      if (\n        typeof options.condition === 'function' &&\n        typeof options.error === 'function' &&\n        !options.condition(config[key], exampleConfig[key])\n      ) {\n        options.error(key, config[key], exampleConfig[key], options, path);\n      }\n    } else if (\n      shouldSkipValidationForPath(\n        path,\n        key,\n        options.recursiveDenylist || options.recursiveBlacklist\n      )\n    ) {\n      // skip validating unknown options inside blacklisted paths\n    } else {\n      options.unknown &&\n        options.unknown(config, exampleConfig, key, options, path);\n    }\n\n    if (\n      options.recursive &&\n      !Array.isArray(exampleConfig[key]) &&\n      (options.recursiveDenylist || options.recursiveBlacklist) &&\n      !shouldSkipValidationForPath(\n        path,\n        key,\n        options.recursiveDenylist || options.recursiveBlacklist\n      )\n    ) {\n      _validate(config[key], exampleConfig[key], options, [...path, key]);\n    }\n  }\n\n  return {\n    hasDeprecationWarnings\n  };\n};\n\nconst allowsMultipleTypes = key => key === 'maxWorkers';\n\nconst isOfTypeStringOrNumber = value =>\n  typeof value === 'number' || typeof value === 'string';\n\nconst validate = (config, options) => {\n  hasDeprecationWarnings = false; // Preserve default denylist entries even with user-supplied denylist\n\n  const combinedDenylist = [\n    ...(_defaultConfig.default.recursiveDenylist || []),\n    ...(options.recursiveDenylist || options.recursiveBlacklist || [])\n  ];\n  const defaultedOptions = Object.assign({\n    ..._defaultConfig.default,\n    ...options,\n    recursiveDenylist: combinedDenylist,\n    title: options.title || _defaultConfig.default.title\n  });\n\n  const {hasDeprecationWarnings: hdw} = _validate(\n    config,\n    options.exampleConfig,\n    defaultedOptions\n  );\n\n  return {\n    hasDeprecationWarnings: hdw,\n    isValid: true\n  };\n};\n\nvar _default = validate;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}