{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = require('path');\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _constants = require('./constants');\n\nvar _getCacheDirectory = _interopRequireDefault(require('./getCacheDirectory'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst NODE_MODULES_REGEXP = (0, _jestRegexUtil().replacePathSepForRegex)(_constants.NODE_MODULES);\nconst defaultOptions = {\n  automock: false,\n  bail: 0,\n  cache: true,\n  cacheDirectory: (0, _getCacheDirectory.default)(),\n  changedFilesWithAncestor: false,\n  clearMocks: false,\n  collectCoverage: false,\n  coveragePathIgnorePatterns: [NODE_MODULES_REGEXP],\n  coverageProvider: 'babel',\n  coverageReporters: ['json', 'text', 'lcov', 'clover'],\n  errorOnDeprecated: false,\n  expand: false,\n  forceCoverageMatch: [],\n  globals: {},\n  haste: {\n    computeSha1: false,\n    throwOnModuleCollision: false\n  },\n  injectGlobals: true,\n  maxConcurrency: 5,\n  maxWorkers: '50%',\n  moduleDirectories: ['node_modules'],\n  moduleFileExtensions: ['js', 'json', 'jsx', 'ts', 'tsx', 'node'],\n  moduleNameMapper: {},\n  modulePathIgnorePatterns: [],\n  noStackTrace: false,\n  notify: false,\n  notifyMode: 'failure-change',\n  prettierPath: 'prettier',\n  resetMocks: false,\n  resetModules: false,\n  restoreMocks: false,\n  roots: ['<rootDir>'],\n  runTestsByPath: false,\n  runner: 'jest-runner',\n  setupFiles: [],\n  setupFilesAfterEnv: [],\n  skipFilter: false,\n  slowTestThreshold: 5,\n  snapshotSerializers: [],\n  testEnvironment: 'jest-environment-jsdom',\n  testEnvironmentOptions: {},\n  testFailureExitCode: 1,\n  testLocationInResults: false,\n  testMatch: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[tj]s?(x)'],\n  testPathIgnorePatterns: [NODE_MODULES_REGEXP],\n  testRegex: [],\n  testRunner: 'jasmine2',\n  testSequencer: '@jest/test-sequencer',\n  testURL: 'http://localhost',\n  timers: 'real',\n  transformIgnorePatterns: [NODE_MODULES_REGEXP, `\\\\.pnp\\\\.[^\\\\${_path().sep}]+$`],\n  useStderr: false,\n  watch: false,\n  watchPathIgnorePatterns: [],\n  watchman: true\n};\nvar _default = defaultOptions;\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-config/build/Defaults.js"],"names":["Object","defineProperty","exports","value","default","_path","data","require","_jestRegexUtil","_constants","_getCacheDirectory","_interopRequireDefault","obj","__esModule","NODE_MODULES_REGEXP","replacePathSepForRegex","NODE_MODULES","defaultOptions","automock","bail","cache","cacheDirectory","changedFilesWithAncestor","clearMocks","collectCoverage","coveragePathIgnorePatterns","coverageProvider","coverageReporters","errorOnDeprecated","expand","forceCoverageMatch","globals","haste","computeSha1","throwOnModuleCollision","injectGlobals","maxConcurrency","maxWorkers","moduleDirectories","moduleFileExtensions","moduleNameMapper","modulePathIgnorePatterns","noStackTrace","notify","notifyMode","prettierPath","resetMocks","resetModules","restoreMocks","roots","runTestsByPath","runner","setupFiles","setupFilesAfterEnv","skipFilter","slowTestThreshold","snapshotSerializers","testEnvironment","testEnvironmentOptions","testFailureExitCode","testLocationInResults","testMatch","testPathIgnorePatterns","testRegex","testRunner","testSequencer","testURL","timers","transformIgnorePatterns","sep","useStderr","watch","watchPathIgnorePatterns","watchman","_default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = require('path');\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _constants = require('./constants');\n\nvar _getCacheDirectory = _interopRequireDefault(require('./getCacheDirectory'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NODE_MODULES_REGEXP = (0, _jestRegexUtil().replacePathSepForRegex)(\n  _constants.NODE_MODULES\n);\nconst defaultOptions = {\n  automock: false,\n  bail: 0,\n  cache: true,\n  cacheDirectory: (0, _getCacheDirectory.default)(),\n  changedFilesWithAncestor: false,\n  clearMocks: false,\n  collectCoverage: false,\n  coveragePathIgnorePatterns: [NODE_MODULES_REGEXP],\n  coverageProvider: 'babel',\n  coverageReporters: ['json', 'text', 'lcov', 'clover'],\n  errorOnDeprecated: false,\n  expand: false,\n  forceCoverageMatch: [],\n  globals: {},\n  haste: {\n    computeSha1: false,\n    throwOnModuleCollision: false\n  },\n  injectGlobals: true,\n  maxConcurrency: 5,\n  maxWorkers: '50%',\n  moduleDirectories: ['node_modules'],\n  moduleFileExtensions: ['js', 'json', 'jsx', 'ts', 'tsx', 'node'],\n  moduleNameMapper: {},\n  modulePathIgnorePatterns: [],\n  noStackTrace: false,\n  notify: false,\n  notifyMode: 'failure-change',\n  prettierPath: 'prettier',\n  resetMocks: false,\n  resetModules: false,\n  restoreMocks: false,\n  roots: ['<rootDir>'],\n  runTestsByPath: false,\n  runner: 'jest-runner',\n  setupFiles: [],\n  setupFilesAfterEnv: [],\n  skipFilter: false,\n  slowTestThreshold: 5,\n  snapshotSerializers: [],\n  testEnvironment: 'jest-environment-jsdom',\n  testEnvironmentOptions: {},\n  testFailureExitCode: 1,\n  testLocationInResults: false,\n  testMatch: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[tj]s?(x)'],\n  testPathIgnorePatterns: [NODE_MODULES_REGEXP],\n  testRegex: [],\n  testRunner: 'jasmine2',\n  testSequencer: '@jest/test-sequencer',\n  testURL: 'http://localhost',\n  timers: 'real',\n  transformIgnorePatterns: [\n    NODE_MODULES_REGEXP,\n    `\\\\.pnp\\\\.[^\\\\${_path().sep}]+$`\n  ],\n  useStderr: false,\n  watch: false,\n  watchPathIgnorePatterns: [],\n  watchman: true\n};\nvar _default = defaultOptions;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}