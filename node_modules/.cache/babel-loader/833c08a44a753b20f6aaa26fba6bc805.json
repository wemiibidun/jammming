{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semverMin = semverMin;\nexports.semverify = semverify;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.getHighestUnreleased = getHighestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\n\nvar _semver = require(\"semver\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _targets = require(\"./targets\");\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction semverMin(first, second) {\n  return first && _semver.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.valid(version)) {\n    return version;\n  }\n\n  v.invariant(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);\n\n  if (hasUnreleased) {\n    return a === hasUnreleased ? b : a || b;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getHighestUnreleased(a, b, env) {\n  return getLowestUnreleased(a, b, env) === a ? b : a;\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/@babel/helper-compilation-targets/lib/utils.js"],"names":["Object","defineProperty","exports","value","semverMin","semverify","isUnreleasedVersion","getLowestUnreleased","getHighestUnreleased","getLowestImplementedVersion","_semver","require","_helperValidatorOption","_targets","versionRegExp","v","OptionValidator","first","second","lt","version","valid","invariant","test","split","toString","length","push","join","env","unreleasedLabel","unreleasedLabels","toLowerCase","a","b","hasUnreleased","some","item","plugin","environment","result","chrome"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACAH,OAAO,CAACI,mBAAR,GAA8BA,mBAA9B;AACAJ,OAAO,CAACK,mBAAR,GAA8BA,mBAA9B;AACAL,OAAO,CAACM,oBAAR,GAA+BA,oBAA/B;AACAN,OAAO,CAACO,2BAAR,GAAsCA,2BAAtC;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,gCAAD,CAApC;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAMG,aAAa,GAAG,iBAAtB;AACA,MAAMC,CAAC,GAAG,IAAIH,sBAAsB,CAACI,eAA3B,CAA2C,mCAA3C,CAAV;;AAEA,SAASZ,SAAT,CAAmBa,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,SAAOD,KAAK,IAAIP,OAAO,CAACS,EAAR,CAAWF,KAAX,EAAkBC,MAAlB,CAAT,GAAqCD,KAArC,GAA6CC,MAApD;AACD;;AAED,SAASb,SAAT,CAAmBe,OAAnB,EAA4B;AAC1B,MAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BV,OAAO,CAACW,KAAR,CAAcD,OAAd,CAAnC,EAA2D;AACzD,WAAOA,OAAP;AACD;;AAEDL,EAAAA,CAAC,CAACO,SAAF,CAAY,OAAOF,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAP,KAAmB,QAAnB,IAA+BN,aAAa,CAACS,IAAd,CAAmBH,OAAnB,CAA1E,EAAwG,IAAGA,OAAQ,0BAAnH;AACA,QAAMI,KAAK,GAAGJ,OAAO,CAACK,QAAR,GAAmBD,KAAnB,CAAyB,GAAzB,CAAd;;AAEA,SAAOA,KAAK,CAACE,MAAN,GAAe,CAAtB,EAAyB;AACvBF,IAAAA,KAAK,CAACG,IAAN,CAAW,GAAX;AACD;;AAED,SAAOH,KAAK,CAACI,IAAN,CAAW,GAAX,CAAP;AACD;;AAED,SAAStB,mBAAT,CAA6Bc,OAA7B,EAAsCS,GAAtC,EAA2C;AACzC,QAAMC,eAAe,GAAGjB,QAAQ,CAACkB,gBAAT,CAA0BF,GAA1B,CAAxB;AACA,SAAO,CAAC,CAACC,eAAF,IAAqBA,eAAe,KAAKV,OAAO,CAACK,QAAR,GAAmBO,WAAnB,EAAhD;AACD;;AAED,SAASzB,mBAAT,CAA6B0B,CAA7B,EAAgCC,CAAhC,EAAmCL,GAAnC,EAAwC;AACtC,QAAMC,eAAe,GAAGjB,QAAQ,CAACkB,gBAAT,CAA0BF,GAA1B,CAAxB;AACA,QAAMM,aAAa,GAAG,CAACF,CAAD,EAAIC,CAAJ,EAAOE,IAAP,CAAYC,IAAI,IAAIA,IAAI,KAAKP,eAA7B,CAAtB;;AAEA,MAAIK,aAAJ,EAAmB;AACjB,WAAOF,CAAC,KAAKE,aAAN,GAAsBD,CAAtB,GAA0BD,CAAC,IAAIC,CAAtC;AACD;;AAED,SAAO9B,SAAS,CAAC6B,CAAD,EAAIC,CAAJ,CAAhB;AACD;;AAED,SAAS1B,oBAAT,CAA8ByB,CAA9B,EAAiCC,CAAjC,EAAoCL,GAApC,EAAyC;AACvC,SAAOtB,mBAAmB,CAAC0B,CAAD,EAAIC,CAAJ,EAAOL,GAAP,CAAnB,KAAmCI,CAAnC,GAAuCC,CAAvC,GAA2CD,CAAlD;AACD;;AAED,SAASxB,2BAAT,CAAqC6B,MAArC,EAA6CC,WAA7C,EAA0D;AACxD,QAAMC,MAAM,GAAGF,MAAM,CAACC,WAAD,CAArB;;AAEA,MAAI,CAACC,MAAD,IAAWD,WAAW,KAAK,SAA/B,EAA0C;AACxC,WAAOD,MAAM,CAACG,MAAd;AACD;;AAED,SAAOD,MAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semverMin = semverMin;\nexports.semverify = semverify;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.getHighestUnreleased = getHighestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\n\nvar _semver = require(\"semver\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _targets = require(\"./targets\");\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction semverMin(first, second) {\n  return first && _semver.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.valid(version)) {\n    return version;\n  }\n\n  v.invariant(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);\n\n  if (hasUnreleased) {\n    return a === hasUnreleased ? b : a || b;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getHighestUnreleased(a, b, env) {\n  return getLowestUnreleased(a, b, env) === a ? b : a;\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"script"}