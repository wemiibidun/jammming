{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.createEmptyTestResult = exports.addResult = exports.buildFailureTestResult = exports.makeEmptyAggregatedTestResult = void 0;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\n\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\n\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: undefined,\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  sourceMaps: {},\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\n\nexports.buildFailureTestResult = buildFailureTestResult;\n\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests += testResult.numPassingTests + testResult.numFailingTests + testResult.numPendingTests + testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n\n  if (testResult.snapshot.uncheckedKeys && testResult.snapshot.uncheckedKeys.length > 0) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total += testResult.snapshot.added + testResult.snapshot.matched + testResult.snapshot.unmatched + testResult.snapshot.updated;\n};\n\nexports.addResult = addResult;\n\nconst createEmptyTestResult = () => ({\n  leaks: false,\n  // That's legacy code, just adding it as needed for typing\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testFilePath: '',\n  testResults: []\n});\n\nexports.createEmptyTestResult = createEmptyTestResult;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/@jest/test-result/build/helpers.js"],"names":["Object","defineProperty","exports","value","createEmptyTestResult","addResult","buildFailureTestResult","makeEmptyAggregatedTestResult","numFailedTestSuites","numFailedTests","numPassedTestSuites","numPassedTests","numPendingTestSuites","numPendingTests","numRuntimeErrorTestSuites","numTodoTests","numTotalTestSuites","numTotalTests","openHandles","snapshot","added","didUpdate","failure","filesAdded","filesRemoved","filesRemovedList","filesUnmatched","filesUpdated","matched","total","unchecked","uncheckedKeysByFile","unmatched","updated","startTime","success","testResults","wasInterrupted","testPath","err","console","undefined","displayName","failureMessage","leaks","numFailingTests","numPassingTests","perfStats","end","runtime","slow","start","skipped","fileDeleted","uncheckedKeys","sourceMaps","testExecError","testFilePath","aggregatedResults","testResult","push","length","filePath","keys"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.createEmptyTestResult = exports.addResult = exports.buildFailureTestResult = exports.makeEmptyAggregatedTestResult = void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\n\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\n\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: undefined,\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  sourceMaps: {},\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\nexports.buildFailureTestResult = buildFailureTestResult;\n\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests +=\n    testResult.numPassingTests +\n    testResult.numFailingTests +\n    testResult.numPendingTests +\n    testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n\n  if (\n    testResult.snapshot.uncheckedKeys &&\n    testResult.snapshot.uncheckedKeys.length > 0\n  ) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total +=\n    testResult.snapshot.added +\n    testResult.snapshot.matched +\n    testResult.snapshot.unmatched +\n    testResult.snapshot.updated;\n};\n\nexports.addResult = addResult;\n\nconst createEmptyTestResult = () => ({\n  leaks: false,\n  // That's legacy code, just adding it as needed for typing\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testFilePath: '',\n  testResults: []\n});\n\nexports.createEmptyTestResult = createEmptyTestResult;\n"]},"metadata":{},"sourceType":"script"}