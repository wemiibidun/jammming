{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.list = exports.nodes = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction crawl(node, state = {}) {\n  if (t.isMemberExpression(node) || t.isOptionalMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (t.isCallExpression(node) || t.isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (t.isFunction(node)) {\n    state.hasFunction = true;\n  } else if (t.isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction isHelper(node) {\n  if (t.isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (t.isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (t.isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);\n}\n\nconst nodes = {\n  AssignmentExpression(node) {\n    const state = crawl(node.right);\n\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  SwitchCase(node, parent) {\n    return {\n      before: !!node.consequent.length || parent.cases[0] === node,\n      after: !node.consequent.length && parent.cases[parent.cases.length - 1] === node\n    };\n  },\n\n  LogicalExpression(node) {\n    if (t.isFunction(node.left) || t.isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  Literal(node) {\n    if (t.isStringLiteral(node) && node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  CallExpression(node) {\n    if (t.isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  OptionalCallExpression(node) {\n    if (t.isFunction(node.callee)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  VariableDeclaration(node) {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n\n      if (!enabled) {\n        const state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  IfStatement(node) {\n    if (t.isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n\n};\nexports.nodes = nodes;\n\nnodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeCallProperty = function (node, parent) {\n  var _parent$properties;\n\n  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) != null && _parent$properties.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeIndexer = function (node, parent) {\n  var _parent$properties2, _parent$callPropertie;\n\n  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) != null && _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) != null && _parent$callPropertie.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (node, parent) {\n  var _parent$properties3, _parent$callPropertie2, _parent$indexers;\n\n  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) != null && _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) != null && _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) != null && _parent$indexers.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nconst list = {\n  VariableDeclaration(node) {\n    return node.declarations.map(decl => decl.init);\n  },\n\n  ArrayExpression(node) {\n    return node.elements;\n  },\n\n  ObjectExpression(node) {\n    return node.properties;\n  }\n\n};\nexports.list = list;\n[[\"Function\", true], [\"Class\", true], [\"Loop\", true], [\"LabeledStatement\", true], [\"SwitchStatement\", true], [\"TryStatement\", true]].forEach(function ([type, amounts]) {\n  if (typeof amounts === \"boolean\") {\n    amounts = {\n      after: amounts,\n      before: amounts\n    };\n  }\n\n  [type].concat(t.FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    nodes[type] = function () {\n      return amounts;\n    };\n  });\n});","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/@babel/generator/lib/node/whitespace.js"],"names":["Object","defineProperty","exports","value","list","nodes","t","require","crawl","node","state","isMemberExpression","isOptionalMemberExpression","object","computed","property","isBinary","isAssignmentExpression","left","right","isCallExpression","isOptionalCallExpression","hasCall","callee","isFunction","hasFunction","isIdentifier","hasHelper","isHelper","name","isType","isLiteral","isObjectExpression","isArrayExpression","AssignmentExpression","before","after","SwitchCase","parent","consequent","length","cases","LogicalExpression","Literal","isStringLiteral","CallExpression","OptionalCallExpression","VariableDeclaration","i","declarations","declar","enabled","id","init","IfStatement","isBlockStatement","ObjectProperty","ObjectTypeProperty","ObjectMethod","properties","ObjectTypeCallProperty","_parent$properties","callProperties","ObjectTypeIndexer","_parent$properties2","_parent$callPropertie","indexers","ObjectTypeInternalSlot","_parent$properties3","_parent$callPropertie2","_parent$indexers","internalSlots","map","decl","ArrayExpression","elements","ObjectExpression","forEach","type","amounts","concat","FLIPPED_ALIAS_KEYS"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACG,KAAR,GAAgB,KAAK,CAApC;;AAEA,IAAIC,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAf;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqBC,KAAK,GAAG,EAA7B,EAAiC;AAC/B,MAAIJ,CAAC,CAACK,kBAAF,CAAqBF,IAArB,KAA8BH,CAAC,CAACM,0BAAF,CAA6BH,IAA7B,CAAlC,EAAsE;AACpED,IAAAA,KAAK,CAACC,IAAI,CAACI,MAAN,EAAcH,KAAd,CAAL;AACA,QAAID,IAAI,CAACK,QAAT,EAAmBN,KAAK,CAACC,IAAI,CAACM,QAAN,EAAgBL,KAAhB,CAAL;AACpB,GAHD,MAGO,IAAIJ,CAAC,CAACU,QAAF,CAAWP,IAAX,KAAoBH,CAAC,CAACW,sBAAF,CAAyBR,IAAzB,CAAxB,EAAwD;AAC7DD,IAAAA,KAAK,CAACC,IAAI,CAACS,IAAN,EAAYR,KAAZ,CAAL;AACAF,IAAAA,KAAK,CAACC,IAAI,CAACU,KAAN,EAAaT,KAAb,CAAL;AACD,GAHM,MAGA,IAAIJ,CAAC,CAACc,gBAAF,CAAmBX,IAAnB,KAA4BH,CAAC,CAACe,wBAAF,CAA2BZ,IAA3B,CAAhC,EAAkE;AACvEC,IAAAA,KAAK,CAACY,OAAN,GAAgB,IAAhB;AACAd,IAAAA,KAAK,CAACC,IAAI,CAACc,MAAN,EAAcb,KAAd,CAAL;AACD,GAHM,MAGA,IAAIJ,CAAC,CAACkB,UAAF,CAAaf,IAAb,CAAJ,EAAwB;AAC7BC,IAAAA,KAAK,CAACe,WAAN,GAAoB,IAApB;AACD,GAFM,MAEA,IAAInB,CAAC,CAACoB,YAAF,CAAejB,IAAf,CAAJ,EAA0B;AAC/BC,IAAAA,KAAK,CAACiB,SAAN,GAAkBjB,KAAK,CAACiB,SAAN,IAAmBC,QAAQ,CAACnB,IAAI,CAACc,MAAN,CAA7C;AACD;;AAED,SAAOb,KAAP;AACD;;AAED,SAASkB,QAAT,CAAkBnB,IAAlB,EAAwB;AACtB,MAAIH,CAAC,CAACK,kBAAF,CAAqBF,IAArB,CAAJ,EAAgC;AAC9B,WAAOmB,QAAQ,CAACnB,IAAI,CAACI,MAAN,CAAR,IAAyBe,QAAQ,CAACnB,IAAI,CAACM,QAAN,CAAxC;AACD,GAFD,MAEO,IAAIT,CAAC,CAACoB,YAAF,CAAejB,IAAf,CAAJ,EAA0B;AAC/B,WAAOA,IAAI,CAACoB,IAAL,KAAc,SAAd,IAA2BpB,IAAI,CAACoB,IAAL,CAAU,CAAV,MAAiB,GAAnD;AACD,GAFM,MAEA,IAAIvB,CAAC,CAACc,gBAAF,CAAmBX,IAAnB,CAAJ,EAA8B;AACnC,WAAOmB,QAAQ,CAACnB,IAAI,CAACc,MAAN,CAAf;AACD,GAFM,MAEA,IAAIjB,CAAC,CAACU,QAAF,CAAWP,IAAX,KAAoBH,CAAC,CAACW,sBAAF,CAAyBR,IAAzB,CAAxB,EAAwD;AAC7D,WAAOH,CAAC,CAACoB,YAAF,CAAejB,IAAI,CAACS,IAApB,KAA6BU,QAAQ,CAACnB,IAAI,CAACS,IAAN,CAArC,IAAoDU,QAAQ,CAACnB,IAAI,CAACU,KAAN,CAAnE;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAED,SAASW,MAAT,CAAgBrB,IAAhB,EAAsB;AACpB,SAAOH,CAAC,CAACyB,SAAF,CAAYtB,IAAZ,KAAqBH,CAAC,CAAC0B,kBAAF,CAAqBvB,IAArB,CAArB,IAAmDH,CAAC,CAAC2B,iBAAF,CAAoBxB,IAApB,CAAnD,IAAgFH,CAAC,CAACoB,YAAF,CAAejB,IAAf,CAAhF,IAAwGH,CAAC,CAACK,kBAAF,CAAqBF,IAArB,CAA/G;AACD;;AAED,MAAMJ,KAAK,GAAG;AACZ6B,EAAAA,oBAAoB,CAACzB,IAAD,EAAO;AACzB,UAAMC,KAAK,GAAGF,KAAK,CAACC,IAAI,CAACU,KAAN,CAAnB;;AAEA,QAAIT,KAAK,CAACY,OAAN,IAAiBZ,KAAK,CAACiB,SAAvB,IAAoCjB,KAAK,CAACe,WAA9C,EAA2D;AACzD,aAAO;AACLU,QAAAA,MAAM,EAAEzB,KAAK,CAACe,WADT;AAELW,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;AACF,GAVW;;AAYZC,EAAAA,UAAU,CAAC5B,IAAD,EAAO6B,MAAP,EAAe;AACvB,WAAO;AACLH,MAAAA,MAAM,EAAE,CAAC,CAAC1B,IAAI,CAAC8B,UAAL,CAAgBC,MAAlB,IAA4BF,MAAM,CAACG,KAAP,CAAa,CAAb,MAAoBhC,IADnD;AAEL2B,MAAAA,KAAK,EAAE,CAAC3B,IAAI,CAAC8B,UAAL,CAAgBC,MAAjB,IAA2BF,MAAM,CAACG,KAAP,CAAaH,MAAM,CAACG,KAAP,CAAaD,MAAb,GAAsB,CAAnC,MAA0C/B;AAFvE,KAAP;AAID,GAjBW;;AAmBZiC,EAAAA,iBAAiB,CAACjC,IAAD,EAAO;AACtB,QAAIH,CAAC,CAACkB,UAAF,CAAaf,IAAI,CAACS,IAAlB,KAA2BZ,CAAC,CAACkB,UAAF,CAAaf,IAAI,CAACU,KAAlB,CAA/B,EAAyD;AACvD,aAAO;AACLiB,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AACF,GAzBW;;AA2BZO,EAAAA,OAAO,CAAClC,IAAD,EAAO;AACZ,QAAIH,CAAC,CAACsC,eAAF,CAAkBnC,IAAlB,KAA2BA,IAAI,CAACN,KAAL,KAAe,YAA9C,EAA4D;AAC1D,aAAO;AACLiC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AACF,GAjCW;;AAmCZS,EAAAA,cAAc,CAACpC,IAAD,EAAO;AACnB,QAAIH,CAAC,CAACkB,UAAF,CAAaf,IAAI,CAACc,MAAlB,KAA6BK,QAAQ,CAACnB,IAAD,CAAzC,EAAiD;AAC/C,aAAO;AACL0B,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;AACF,GA1CW;;AA4CZU,EAAAA,sBAAsB,CAACrC,IAAD,EAAO;AAC3B,QAAIH,CAAC,CAACkB,UAAF,CAAaf,IAAI,CAACc,MAAlB,CAAJ,EAA+B;AAC7B,aAAO;AACLY,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;AACF,GAnDW;;AAqDZW,EAAAA,mBAAmB,CAACtC,IAAD,EAAO;AACxB,SAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvC,IAAI,CAACwC,YAAL,CAAkBT,MAAtC,EAA8CQ,CAAC,EAA/C,EAAmD;AACjD,YAAME,MAAM,GAAGzC,IAAI,CAACwC,YAAL,CAAkBD,CAAlB,CAAf;AACA,UAAIG,OAAO,GAAGvB,QAAQ,CAACsB,MAAM,CAACE,EAAR,CAAR,IAAuB,CAACtB,MAAM,CAACoB,MAAM,CAACG,IAAR,CAA5C;;AAEA,UAAI,CAACF,OAAL,EAAc;AACZ,cAAMzC,KAAK,GAAGF,KAAK,CAAC0C,MAAM,CAACG,IAAR,CAAnB;AACAF,QAAAA,OAAO,GAAGvB,QAAQ,CAACsB,MAAM,CAACG,IAAR,CAAR,IAAyB3C,KAAK,CAACY,OAA/B,IAA0CZ,KAAK,CAACe,WAA1D;AACD;;AAED,UAAI0B,OAAJ,EAAa;AACX,eAAO;AACLhB,UAAAA,MAAM,EAAE,IADH;AAELC,UAAAA,KAAK,EAAE;AAFF,SAAP;AAID;AACF;AACF,GAtEW;;AAwEZkB,EAAAA,WAAW,CAAC7C,IAAD,EAAO;AAChB,QAAIH,CAAC,CAACiD,gBAAF,CAAmB9C,IAAI,CAAC8B,UAAxB,CAAJ,EAAyC;AACvC,aAAO;AACLJ,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,KAAK,EAAE;AAFF,OAAP;AAID;AACF;;AA/EW,CAAd;AAkFAlC,OAAO,CAACG,KAAR,GAAgBA,KAAhB;;AAEAA,KAAK,CAACmD,cAAN,GAAuBnD,KAAK,CAACoD,kBAAN,GAA2BpD,KAAK,CAACqD,YAAN,GAAqB,UAAUjD,IAAV,EAAgB6B,MAAhB,EAAwB;AAC7F,MAAIA,MAAM,CAACqB,UAAP,CAAkB,CAAlB,MAAyBlD,IAA7B,EAAmC;AACjC,WAAO;AACL0B,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;AACF,CAND;;AAQA9B,KAAK,CAACuD,sBAAN,GAA+B,UAAUnD,IAAV,EAAgB6B,MAAhB,EAAwB;AACrD,MAAIuB,kBAAJ;;AAEA,MAAIvB,MAAM,CAACwB,cAAP,CAAsB,CAAtB,MAA6BrD,IAA7B,IAAqC,EAAE,CAACoD,kBAAkB,GAAGvB,MAAM,CAACqB,UAA7B,KAA4C,IAA5C,IAAoDE,kBAAkB,CAACrB,MAAzE,CAAzC,EAA2H;AACzH,WAAO;AACLL,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;AACF,CARD;;AAUA9B,KAAK,CAAC0D,iBAAN,GAA0B,UAAUtD,IAAV,EAAgB6B,MAAhB,EAAwB;AAChD,MAAI0B,mBAAJ,EAAyBC,qBAAzB;;AAEA,MAAI3B,MAAM,CAAC4B,QAAP,CAAgB,CAAhB,MAAuBzD,IAAvB,IAA+B,EAAE,CAACuD,mBAAmB,GAAG1B,MAAM,CAACqB,UAA9B,KAA6C,IAA7C,IAAqDK,mBAAmB,CAACxB,MAA3E,CAA/B,IAAqH,EAAE,CAACyB,qBAAqB,GAAG3B,MAAM,CAACwB,cAAhC,KAAmD,IAAnD,IAA2DG,qBAAqB,CAACzB,MAAnF,CAAzH,EAAqN;AACnN,WAAO;AACLL,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;AACF,CARD;;AAUA9B,KAAK,CAAC8D,sBAAN,GAA+B,UAAU1D,IAAV,EAAgB6B,MAAhB,EAAwB;AACrD,MAAI8B,mBAAJ,EAAyBC,sBAAzB,EAAiDC,gBAAjD;;AAEA,MAAIhC,MAAM,CAACiC,aAAP,CAAqB,CAArB,MAA4B9D,IAA5B,IAAoC,EAAE,CAAC2D,mBAAmB,GAAG9B,MAAM,CAACqB,UAA9B,KAA6C,IAA7C,IAAqDS,mBAAmB,CAAC5B,MAA3E,CAApC,IAA0H,EAAE,CAAC6B,sBAAsB,GAAG/B,MAAM,CAACwB,cAAjC,KAAoD,IAApD,IAA4DO,sBAAsB,CAAC7B,MAArF,CAA1H,IAA0N,EAAE,CAAC8B,gBAAgB,GAAGhC,MAAM,CAAC4B,QAA3B,KAAwC,IAAxC,IAAgDI,gBAAgB,CAAC9B,MAAnE,CAA9N,EAA0S;AACxS,WAAO;AACLL,MAAAA,MAAM,EAAE;AADH,KAAP;AAGD;AACF,CARD;;AAUA,MAAM/B,IAAI,GAAG;AACX2C,EAAAA,mBAAmB,CAACtC,IAAD,EAAO;AACxB,WAAOA,IAAI,CAACwC,YAAL,CAAkBuB,GAAlB,CAAsBC,IAAI,IAAIA,IAAI,CAACpB,IAAnC,CAAP;AACD,GAHU;;AAKXqB,EAAAA,eAAe,CAACjE,IAAD,EAAO;AACpB,WAAOA,IAAI,CAACkE,QAAZ;AACD,GAPU;;AASXC,EAAAA,gBAAgB,CAACnE,IAAD,EAAO;AACrB,WAAOA,IAAI,CAACkD,UAAZ;AACD;;AAXU,CAAb;AAcAzD,OAAO,CAACE,IAAR,GAAeA,IAAf;AACA,CAAC,CAAC,UAAD,EAAa,IAAb,CAAD,EAAqB,CAAC,OAAD,EAAU,IAAV,CAArB,EAAsC,CAAC,MAAD,EAAS,IAAT,CAAtC,EAAsD,CAAC,kBAAD,EAAqB,IAArB,CAAtD,EAAkF,CAAC,iBAAD,EAAoB,IAApB,CAAlF,EAA6G,CAAC,cAAD,EAAiB,IAAjB,CAA7G,EAAqIyE,OAArI,CAA6I,UAAU,CAACC,IAAD,EAAOC,OAAP,CAAV,EAA2B;AACtK,MAAI,OAAOA,OAAP,KAAmB,SAAvB,EAAkC;AAChCA,IAAAA,OAAO,GAAG;AACR3C,MAAAA,KAAK,EAAE2C,OADC;AAER5C,MAAAA,MAAM,EAAE4C;AAFA,KAAV;AAID;;AAED,GAACD,IAAD,EAAOE,MAAP,CAAc1E,CAAC,CAAC2E,kBAAF,CAAqBH,IAArB,KAA8B,EAA5C,EAAgDD,OAAhD,CAAwD,UAAUC,IAAV,EAAgB;AACtEzE,IAAAA,KAAK,CAACyE,IAAD,CAAL,GAAc,YAAY;AACxB,aAAOC,OAAP;AACD,KAFD;AAGD,GAJD;AAKD,CAbD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.list = exports.nodes = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction crawl(node, state = {}) {\n  if (t.isMemberExpression(node) || t.isOptionalMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (t.isCallExpression(node) || t.isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (t.isFunction(node)) {\n    state.hasFunction = true;\n  } else if (t.isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction isHelper(node) {\n  if (t.isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (t.isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (t.isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);\n}\n\nconst nodes = {\n  AssignmentExpression(node) {\n    const state = crawl(node.right);\n\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  SwitchCase(node, parent) {\n    return {\n      before: !!node.consequent.length || parent.cases[0] === node,\n      after: !node.consequent.length && parent.cases[parent.cases.length - 1] === node\n    };\n  },\n\n  LogicalExpression(node) {\n    if (t.isFunction(node.left) || t.isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  Literal(node) {\n    if (t.isStringLiteral(node) && node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  CallExpression(node) {\n    if (t.isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  OptionalCallExpression(node) {\n    if (t.isFunction(node.callee)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  VariableDeclaration(node) {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n\n      if (!enabled) {\n        const state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  IfStatement(node) {\n    if (t.isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n\n};\nexports.nodes = nodes;\n\nnodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeCallProperty = function (node, parent) {\n  var _parent$properties;\n\n  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) != null && _parent$properties.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeIndexer = function (node, parent) {\n  var _parent$properties2, _parent$callPropertie;\n\n  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) != null && _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) != null && _parent$callPropertie.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (node, parent) {\n  var _parent$properties3, _parent$callPropertie2, _parent$indexers;\n\n  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) != null && _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) != null && _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) != null && _parent$indexers.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nconst list = {\n  VariableDeclaration(node) {\n    return node.declarations.map(decl => decl.init);\n  },\n\n  ArrayExpression(node) {\n    return node.elements;\n  },\n\n  ObjectExpression(node) {\n    return node.properties;\n  }\n\n};\nexports.list = list;\n[[\"Function\", true], [\"Class\", true], [\"Loop\", true], [\"LabeledStatement\", true], [\"SwitchStatement\", true], [\"TryStatement\", true]].forEach(function ([type, amounts]) {\n  if (typeof amounts === \"boolean\") {\n    amounts = {\n      after: amounts,\n      before: amounts\n    };\n  }\n\n  [type].concat(t.FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    nodes[type] = function () {\n      return amounts;\n    };\n  });\n});"]},"metadata":{},"sourceType":"script"}