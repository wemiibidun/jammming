{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.deepMerge = exports.saveSnapshotFile = exports.ensureDirectoryExists = exports.escapeBacktickString = exports.deserializeString = exports.minify = exports.serialize = exports.removeLinesBeforeExternalMatcherTrap = exports.removeExtraLineBreaks = exports.addExtraLineBreaks = exports.getSnapshotData = exports.keyToTestName = exports.testNameToKey = exports.SNAPSHOT_VERSION_WARNING = exports.SNAPSHOT_GUIDE_LINK = exports.SNAPSHOT_VERSION = void 0;\n\nvar path = _interopRequireWildcard(require('path'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nvar fs = _interopRequireWildcard(require('graceful-fs'));\n\nvar _naturalCompare = _interopRequireDefault(require('natural-compare'));\n\nvar _prettyFormat = _interopRequireDefault(require('pretty-format'));\n\nvar _plugins = require('./plugins');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar jestWriteFile = global[Symbol.for('jest-native-write-file')] || fs.writeFileSync;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar jestReadFile = global[Symbol.for('jest-native-read-file')] || fs.readFileSync;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar jestExistsFile = global[Symbol.for('jest-native-exists-file')] || fs.existsSync;\nconst SNAPSHOT_VERSION = '1';\nexports.SNAPSHOT_VERSION = SNAPSHOT_VERSION;\nconst SNAPSHOT_VERSION_REGEXP = /^\\/\\/ Jest Snapshot v(.+),/;\nconst SNAPSHOT_GUIDE_LINK = 'https://goo.gl/fbAQLP';\nexports.SNAPSHOT_GUIDE_LINK = SNAPSHOT_GUIDE_LINK;\n\nconst SNAPSHOT_VERSION_WARNING = _chalk.default.yellow(`${_chalk.default.bold('Warning')}: Before you upgrade snapshots, ` + `we recommend that you revert any local changes to tests or other code, ` + `to ensure that you do not store invalid state.`);\n\nexports.SNAPSHOT_VERSION_WARNING = SNAPSHOT_VERSION_WARNING;\n\nconst writeSnapshotVersion = () => `// Jest Snapshot v${SNAPSHOT_VERSION}, ${SNAPSHOT_GUIDE_LINK}`;\n\nconst validateSnapshotVersion = snapshotContents => {\n  const versionTest = SNAPSHOT_VERSION_REGEXP.exec(snapshotContents);\n  const version = versionTest && versionTest[1];\n\n  if (!version) {\n    return new Error(_chalk.default.red(`${_chalk.default.bold('Outdated snapshot')}: No snapshot header found. ` + `Jest 19 introduced versioned snapshots to ensure all developers ` + `on a project are using the same version of Jest. ` + `Please update all snapshots during this upgrade of Jest.\\n\\n`) + SNAPSHOT_VERSION_WARNING);\n  }\n\n  if (version < SNAPSHOT_VERSION) {\n    return new Error(_chalk.default.red(`${_chalk.default.red.bold('Outdated snapshot')}: The version of the snapshot ` + `file associated with this test is outdated. The snapshot file ` + `version ensures that all developers on a project are using ` + `the same version of Jest. ` + `Please update all snapshots during this upgrade of Jest.\\n\\n`) + `Expected: v${SNAPSHOT_VERSION}\\n` + `Received: v${version}\\n\\n` + SNAPSHOT_VERSION_WARNING);\n  }\n\n  if (version > SNAPSHOT_VERSION) {\n    return new Error(_chalk.default.red(`${_chalk.default.red.bold('Outdated Jest version')}: The version of this ` + `snapshot file indicates that this project is meant to be used ` + `with a newer version of Jest. The snapshot file version ensures ` + `that all developers on a project are using the same version of ` + `Jest. Please update your version of Jest and re-run the tests.\\n\\n`) + `Expected: v${SNAPSHOT_VERSION}\\n` + `Received: v${version}`);\n  }\n\n  return null;\n};\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nconst testNameToKey = (testName, count) => testName + ' ' + count;\n\nexports.testNameToKey = testNameToKey;\n\nconst keyToTestName = key => {\n  if (!/ \\d+$/.test(key)) {\n    throw new Error('Snapshot keys must end with a number.');\n  }\n\n  return key.replace(/ \\d+$/, '');\n};\n\nexports.keyToTestName = keyToTestName;\n\nconst getSnapshotData = (snapshotPath, update) => {\n  const data = Object.create(null);\n  let snapshotContents = '';\n  let dirty = false;\n\n  if (jestExistsFile(snapshotPath)) {\n    try {\n      snapshotContents = jestReadFile(snapshotPath, 'utf8'); // eslint-disable-next-line no-new-func\n\n      const populate = new Function('exports', snapshotContents);\n      populate(data);\n    } catch {}\n  }\n\n  const validationResult = validateSnapshotVersion(snapshotContents);\n  const isInvalid = snapshotContents && validationResult;\n\n  if (update === 'none' && isInvalid) {\n    throw validationResult;\n  }\n\n  if ((update === 'all' || update === 'new') && isInvalid) {\n    dirty = true;\n  }\n\n  return {\n    data,\n    dirty\n  };\n}; // Add extra line breaks at beginning and end of multiline snapshot\n// to make the content easier to read.\n\n\nexports.getSnapshotData = getSnapshotData;\n\nconst addExtraLineBreaks = string => string.includes('\\n') ? `\\n${string}\\n` : string; // Remove extra line breaks at beginning and end of multiline snapshot.\n// Instead of trim, which can remove additional newlines or spaces\n// at beginning or end of the content from a custom serializer.\n\n\nexports.addExtraLineBreaks = addExtraLineBreaks;\n\nconst removeExtraLineBreaks = string => string.length > 2 && string.startsWith('\\n') && string.endsWith('\\n') ? string.slice(1, -1) : string;\n\nexports.removeExtraLineBreaks = removeExtraLineBreaks;\n\nconst removeLinesBeforeExternalMatcherTrap = stack => {\n  const lines = stack.split('\\n');\n\n  for (let i = 0; i < lines.length; i += 1) {\n    // It's a function name specified in `packages/expect/src/index.ts`\n    // for external custom matchers.\n    if (lines[i].includes('__EXTERNAL_MATCHER_TRAP__')) {\n      return lines.slice(i + 1).join('\\n');\n    }\n  }\n\n  return stack;\n};\n\nexports.removeLinesBeforeExternalMatcherTrap = removeLinesBeforeExternalMatcherTrap;\nconst escapeRegex = true;\nconst printFunctionName = false;\n\nconst serialize = (val, indent = 2) => normalizeNewlines((0, _prettyFormat.default)(val, {\n  escapeRegex,\n  indent,\n  plugins: (0, _plugins.getSerializers)(),\n  printFunctionName\n}));\n\nexports.serialize = serialize;\n\nconst minify = val => (0, _prettyFormat.default)(val, {\n  escapeRegex,\n  min: true,\n  plugins: (0, _plugins.getSerializers)(),\n  printFunctionName\n}); // Remove double quote marks and unescape double quotes and backslashes.\n\n\nexports.minify = minify;\n\nconst deserializeString = stringified => stringified.slice(1, -1).replace(/\\\\(\"|\\\\)/g, '$1');\n\nexports.deserializeString = deserializeString;\n\nconst escapeBacktickString = str => str.replace(/`|\\\\|\\${/g, '\\\\$&');\n\nexports.escapeBacktickString = escapeBacktickString;\n\nconst printBacktickString = str => '`' + escapeBacktickString(str) + '`';\n\nconst ensureDirectoryExists = filePath => {\n  try {\n    fs.mkdirSync(path.join(path.dirname(filePath)), {\n      recursive: true\n    });\n  } catch {}\n};\n\nexports.ensureDirectoryExists = ensureDirectoryExists;\n\nconst normalizeNewlines = string => string.replace(/\\r\\n|\\r/g, '\\n');\n\nconst saveSnapshotFile = (snapshotData, snapshotPath) => {\n  const snapshots = Object.keys(snapshotData).sort(_naturalCompare.default).map(key => 'exports[' + printBacktickString(key) + '] = ' + printBacktickString(normalizeNewlines(snapshotData[key])) + ';');\n  ensureDirectoryExists(snapshotPath);\n  jestWriteFile(snapshotPath, writeSnapshotVersion() + '\\n\\n' + snapshots.join('\\n\\n') + '\\n');\n};\n\nexports.saveSnapshotFile = saveSnapshotFile;\n\nconst deepMergeArray = (target, source) => {\n  const mergedOutput = Array.from(target);\n  source.forEach((sourceElement, index) => {\n    const targetElement = mergedOutput[index];\n\n    if (Array.isArray(target[index])) {\n      mergedOutput[index] = deepMergeArray(target[index], sourceElement);\n    } else if (isObject(targetElement)) {\n      mergedOutput[index] = deepMerge(target[index], sourceElement);\n    } else {\n      // Source does not exist in target or target is primitive and cannot be deep merged\n      mergedOutput[index] = sourceElement;\n    }\n  });\n  return mergedOutput;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nconst deepMerge = (target, source) => {\n  if (isObject(target) && isObject(source)) {\n    const mergedOutput = { ...target\n    };\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key]) && !source[key].$$typeof) {\n        if (!(key in target)) Object.assign(mergedOutput, {\n          [key]: source[key]\n        });else mergedOutput[key] = deepMerge(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        mergedOutput[key] = deepMergeArray(target[key], source[key]);\n      } else {\n        Object.assign(mergedOutput, {\n          [key]: source[key]\n        });\n      }\n    });\n    return mergedOutput;\n  } else if (Array.isArray(target) && Array.isArray(source)) {\n    return deepMergeArray(target, source);\n  }\n\n  return target;\n};\n\nexports.deepMerge = deepMerge;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-snapshot/build/utils.js"],"names":["Object","defineProperty","exports","value","deepMerge","saveSnapshotFile","ensureDirectoryExists","escapeBacktickString","deserializeString","minify","serialize","removeLinesBeforeExternalMatcherTrap","removeExtraLineBreaks","addExtraLineBreaks","getSnapshotData","keyToTestName","testNameToKey","SNAPSHOT_VERSION_WARNING","SNAPSHOT_GUIDE_LINK","SNAPSHOT_VERSION","path","_interopRequireWildcard","require","_chalk","_interopRequireDefault","fs","_naturalCompare","_prettyFormat","_plugins","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","global","jestWriteFile","for","writeFileSync","jestReadFile","readFileSync","jestExistsFile","existsSync","SNAPSHOT_VERSION_REGEXP","yellow","bold","writeSnapshotVersion","validateSnapshotVersion","snapshotContents","versionTest","exec","version","Error","red","isObject","item","Array","isArray","testName","count","test","replace","snapshotPath","update","data","create","dirty","populate","Function","validationResult","isInvalid","string","includes","length","startsWith","endsWith","slice","stack","lines","split","i","join","escapeRegex","printFunctionName","val","indent","normalizeNewlines","plugins","getSerializers","min","stringified","str","printBacktickString","filePath","mkdirSync","dirname","recursive","snapshotData","snapshots","keys","sort","map","deepMergeArray","target","source","mergedOutput","from","forEach","sourceElement","index","targetElement","$$typeof","assign"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBF,OAAO,CAACG,gBAAR,GAA2BH,OAAO,CAACI,qBAAR,GAAgCJ,OAAO,CAACK,oBAAR,GAA+BL,OAAO,CAACM,iBAAR,GAA4BN,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACQ,SAAR,GAAoBR,OAAO,CAACS,oCAAR,GAA+CT,OAAO,CAACU,qBAAR,GAAgCV,OAAO,CAACW,kBAAR,GAA6BX,OAAO,CAACY,eAAR,GAA0BZ,OAAO,CAACa,aAAR,GAAwBb,OAAO,CAACc,aAAR,GAAwBd,OAAO,CAACe,wBAAR,GAAmCf,OAAO,CAACgB,mBAAR,GAA8BhB,OAAO,CAACiB,gBAAR,GAA2B,KAAK,CAAtc;;AAEA,IAAIC,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACF,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIG,EAAE,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAhC;;AAEA,IAAII,eAAe,GAAGF,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAA5C;;AAEA,IAAIK,aAAa,GAAGH,sBAAsB,CAACF,OAAO,CAAC,eAAD,CAAR,CAA1C;;AAEA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,WAAD,CAAtB;;AAEA,SAASE,sBAAT,CAAgCK,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACE,IAAAA,OAAO,EAAEF;AAAV,GAArC;AACD;;AAED,SAASG,wBAAT,GAAoC;AAClC,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AACnC,MAAIC,KAAK,GAAG,IAAID,OAAJ,EAAZ;;AACAD,EAAAA,wBAAwB,GAAG,YAAY;AACrC,WAAOE,KAAP;AACD,GAFD;;AAGA,SAAOA,KAAP;AACD;;AAED,SAASb,uBAAT,CAAiCQ,GAAjC,EAAsC;AACpC,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AACzB,WAAOD,GAAP;AACD;;AACD,MAAIA,GAAG,KAAK,IAAR,IAAiB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/D,EAA4E;AAC1E,WAAO;AAACE,MAAAA,OAAO,EAAEF;AAAV,KAAP;AACD;;AACD,MAAIK,KAAK,GAAGF,wBAAwB,EAApC;;AACA,MAAIE,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUN,GAAV,CAAb,EAA6B;AAC3B,WAAOK,KAAK,CAACE,GAAN,CAAUP,GAAV,CAAP;AACD;;AACD,MAAIQ,MAAM,GAAG,EAAb;AACA,MAAIC,qBAAqB,GACvBtC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACuC,wBADlC;;AAEA,OAAK,IAAIC,GAAT,IAAgBX,GAAhB,EAAqB;AACnB,QAAI7B,MAAM,CAACyC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCd,GAArC,EAA0CW,GAA1C,CAAJ,EAAoD;AAClD,UAAII,IAAI,GAAGN,qBAAqB,GAC5BtC,MAAM,CAACuC,wBAAP,CAAgCV,GAAhC,EAAqCW,GAArC,CAD4B,GAE5B,IAFJ;;AAGA,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAClC7C,QAAAA,MAAM,CAACC,cAAP,CAAsBoC,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AACD,OAFD,MAEO;AACLP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcX,GAAG,CAACW,GAAD,CAAjB;AACD;AACF;AACF;;AACDH,EAAAA,MAAM,CAACN,OAAP,GAAiBF,GAAjB;;AACA,MAAIK,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACW,GAAN,CAAUhB,GAAV,EAAeQ,MAAf;AACD;;AACD,SAAOA,MAAP;AACD;;AAED,IAAIS,MAAM,GAAGC,MAAM,CAAC,0BAAD,CAAN,IAAsCA,MAAM,CAACD,MAA1D;AACA,IAAIA,MAAM,GAAGC,MAAM,CAAC,0BAAD,CAAN,IAAsCA,MAAM,CAACD,MAA1D;AACA,IAAIE,aAAa,GACfD,MAAM,CAACD,MAAM,CAACG,GAAP,CAAW,wBAAX,CAAD,CAAN,IAAgDxB,EAAE,CAACyB,aADrD;AAEA,IAAIJ,MAAM,GAAGC,MAAM,CAAC,0BAAD,CAAN,IAAsCA,MAAM,CAACD,MAA1D;AACA,IAAIK,YAAY,GACdJ,MAAM,CAACD,MAAM,CAACG,GAAP,CAAW,uBAAX,CAAD,CAAN,IAA+CxB,EAAE,CAAC2B,YADpD;AAEA,IAAIN,MAAM,GAAGC,MAAM,CAAC,0BAAD,CAAN,IAAsCA,MAAM,CAACD,MAA1D;AACA,IAAIO,cAAc,GAChBN,MAAM,CAACD,MAAM,CAACG,GAAP,CAAW,yBAAX,CAAD,CAAN,IAAiDxB,EAAE,CAAC6B,UADtD;AAEA,MAAMnC,gBAAgB,GAAG,GAAzB;AACAjB,OAAO,CAACiB,gBAAR,GAA2BA,gBAA3B;AACA,MAAMoC,uBAAuB,GAAG,4BAAhC;AACA,MAAMrC,mBAAmB,GAAG,uBAA5B;AACAhB,OAAO,CAACgB,mBAAR,GAA8BA,mBAA9B;;AAEA,MAAMD,wBAAwB,GAAGM,MAAM,CAACQ,OAAP,CAAeyB,MAAf,CAC9B,GAAEjC,MAAM,CAACQ,OAAP,CAAe0B,IAAf,CAAoB,SAApB,CAA+B,kCAAlC,GACG,yEADH,GAEG,gDAH4B,CAAjC;;AAMAvD,OAAO,CAACe,wBAAR,GAAmCA,wBAAnC;;AAEA,MAAMyC,oBAAoB,GAAG,MAC1B,qBAAoBvC,gBAAiB,KAAID,mBAAoB,EADhE;;AAGA,MAAMyC,uBAAuB,GAAGC,gBAAgB,IAAI;AAClD,QAAMC,WAAW,GAAGN,uBAAuB,CAACO,IAAxB,CAA6BF,gBAA7B,CAApB;AACA,QAAMG,OAAO,GAAGF,WAAW,IAAIA,WAAW,CAAC,CAAD,CAA1C;;AAEA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAO,IAAIC,KAAJ,CACLzC,MAAM,CAACQ,OAAP,CAAekC,GAAf,CACG,GAAE1C,MAAM,CAACQ,OAAP,CAAe0B,IAAf,CACD,mBADC,CAED,8BAFF,GAGG,kEAHH,GAIG,mDAJH,GAKG,8DANL,IAOIxC,wBARC,CAAP;AAUD;;AAED,MAAI8C,OAAO,GAAG5C,gBAAd,EAAgC;AAC9B,WAAO,IAAI6C,KAAJ,CACLzC,MAAM,CAACQ,OAAP,CAAekC,GAAf,CACG,GAAE1C,MAAM,CAACQ,OAAP,CAAekC,GAAf,CAAmBR,IAAnB,CACD,mBADC,CAED,gCAFF,GAGG,gEAHH,GAIG,6DAJH,GAKG,4BALH,GAMG,8DAPL,IASG,cAAatC,gBAAiB,IATjC,GAUG,cAAa4C,OAAQ,MAVxB,GAWE9C,wBAZG,CAAP;AAcD;;AAED,MAAI8C,OAAO,GAAG5C,gBAAd,EAAgC;AAC9B,WAAO,IAAI6C,KAAJ,CACLzC,MAAM,CAACQ,OAAP,CAAekC,GAAf,CACG,GAAE1C,MAAM,CAACQ,OAAP,CAAekC,GAAf,CAAmBR,IAAnB,CACD,uBADC,CAED,wBAFF,GAGG,gEAHH,GAIG,kEAJH,GAKG,iEALH,GAMG,oEAPL,IASG,cAAatC,gBAAiB,IATjC,GAUG,cAAa4C,OAAQ,EAXnB,CAAP;AAaD;;AAED,SAAO,IAAP;AACD,CAnDD;;AAqDA,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAA5C;AACD;;AAED,MAAMnD,aAAa,GAAG,CAACsD,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,GAAG,GAAX,GAAiBC,KAA5D;;AAEArE,OAAO,CAACc,aAAR,GAAwBA,aAAxB;;AAEA,MAAMD,aAAa,GAAGyB,GAAG,IAAI;AAC3B,MAAI,CAAC,QAAQgC,IAAR,CAAahC,GAAb,CAAL,EAAwB;AACtB,UAAM,IAAIwB,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,SAAOxB,GAAG,CAACiC,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAP;AACD,CAND;;AAQAvE,OAAO,CAACa,aAAR,GAAwBA,aAAxB;;AAEA,MAAMD,eAAe,GAAG,CAAC4D,YAAD,EAAeC,MAAf,KAA0B;AAChD,QAAMC,IAAI,GAAG5E,MAAM,CAAC6E,MAAP,CAAc,IAAd,CAAb;AACA,MAAIjB,gBAAgB,GAAG,EAAvB;AACA,MAAIkB,KAAK,GAAG,KAAZ;;AAEA,MAAIzB,cAAc,CAACqB,YAAD,CAAlB,EAAkC;AAChC,QAAI;AACFd,MAAAA,gBAAgB,GAAGT,YAAY,CAACuB,YAAD,EAAe,MAAf,CAA/B,CADE,CACqD;;AAEvD,YAAMK,QAAQ,GAAG,IAAIC,QAAJ,CAAa,SAAb,EAAwBpB,gBAAxB,CAAjB;AACAmB,MAAAA,QAAQ,CAACH,IAAD,CAAR;AACD,KALD,CAKE,MAAM,CAAE;AACX;;AAED,QAAMK,gBAAgB,GAAGtB,uBAAuB,CAACC,gBAAD,CAAhD;AACA,QAAMsB,SAAS,GAAGtB,gBAAgB,IAAIqB,gBAAtC;;AAEA,MAAIN,MAAM,KAAK,MAAX,IAAqBO,SAAzB,EAAoC;AAClC,UAAMD,gBAAN;AACD;;AAED,MAAI,CAACN,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,KAAhC,KAA0CO,SAA9C,EAAyD;AACvDJ,IAAAA,KAAK,GAAG,IAAR;AACD;;AAED,SAAO;AACLF,IAAAA,IADK;AAELE,IAAAA;AAFK,GAAP;AAID,CA7BD,C,CA6BG;AACH;;;AAEA5E,OAAO,CAACY,eAAR,GAA0BA,eAA1B;;AAEA,MAAMD,kBAAkB,GAAGsE,MAAM,IAC/BA,MAAM,CAACC,QAAP,CAAgB,IAAhB,IAAyB,KAAID,MAAO,IAApC,GAA0CA,MAD5C,C,CACoD;AACpD;AACA;;;AAEAjF,OAAO,CAACW,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,qBAAqB,GAAGuE,MAAM,IAClCA,MAAM,CAACE,MAAP,GAAgB,CAAhB,IAAqBF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAArB,IAAgDH,MAAM,CAACI,QAAP,CAAgB,IAAhB,CAAhD,GACIJ,MAAM,CAACK,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CADJ,GAEIL,MAHN;;AAKAjF,OAAO,CAACU,qBAAR,GAAgCA,qBAAhC;;AAEA,MAAMD,oCAAoC,GAAG8E,KAAK,IAAI;AACpD,QAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAY,IAAZ,CAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACL,MAA1B,EAAkCO,CAAC,IAAI,CAAvC,EAA0C;AACxC;AACA;AACA,QAAIF,KAAK,CAACE,CAAD,CAAL,CAASR,QAAT,CAAkB,2BAAlB,CAAJ,EAAoD;AAClD,aAAOM,KAAK,CAACF,KAAN,CAAYI,CAAC,GAAG,CAAhB,EAAmBC,IAAnB,CAAwB,IAAxB,CAAP;AACD;AACF;;AAED,SAAOJ,KAAP;AACD,CAZD;;AAcAvF,OAAO,CAACS,oCAAR,GAA+CA,oCAA/C;AACA,MAAMmF,WAAW,GAAG,IAApB;AACA,MAAMC,iBAAiB,GAAG,KAA1B;;AAEA,MAAMrF,SAAS,GAAG,CAACsF,GAAD,EAAMC,MAAM,GAAG,CAAf,KAChBC,iBAAiB,CACf,CAAC,GAAGvE,aAAa,CAACI,OAAlB,EAA2BiE,GAA3B,EAAgC;AAC9BF,EAAAA,WAD8B;AAE9BG,EAAAA,MAF8B;AAG9BE,EAAAA,OAAO,EAAE,CAAC,GAAGvE,QAAQ,CAACwE,cAAb,GAHqB;AAI9BL,EAAAA;AAJ8B,CAAhC,CADe,CADnB;;AAUA7F,OAAO,CAACQ,SAAR,GAAoBA,SAApB;;AAEA,MAAMD,MAAM,GAAGuF,GAAG,IAChB,CAAC,GAAGrE,aAAa,CAACI,OAAlB,EAA2BiE,GAA3B,EAAgC;AAC9BF,EAAAA,WAD8B;AAE9BO,EAAAA,GAAG,EAAE,IAFyB;AAG9BF,EAAAA,OAAO,EAAE,CAAC,GAAGvE,QAAQ,CAACwE,cAAb,GAHqB;AAI9BL,EAAAA;AAJ8B,CAAhC,CADF,C,CAMM;;;AAEN7F,OAAO,CAACO,MAAR,GAAiBA,MAAjB;;AAEA,MAAMD,iBAAiB,GAAG8F,WAAW,IACnCA,WAAW,CAACd,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyBf,OAAzB,CAAiC,WAAjC,EAA8C,IAA9C,CADF;;AAGAvE,OAAO,CAACM,iBAAR,GAA4BA,iBAA5B;;AAEA,MAAMD,oBAAoB,GAAGgG,GAAG,IAAIA,GAAG,CAAC9B,OAAJ,CAAY,WAAZ,EAAyB,MAAzB,CAApC;;AAEAvE,OAAO,CAACK,oBAAR,GAA+BA,oBAA/B;;AAEA,MAAMiG,mBAAmB,GAAGD,GAAG,IAAI,MAAMhG,oBAAoB,CAACgG,GAAD,CAA1B,GAAkC,GAArE;;AAEA,MAAMjG,qBAAqB,GAAGmG,QAAQ,IAAI;AACxC,MAAI;AACFhF,IAAAA,EAAE,CAACiF,SAAH,CAAatF,IAAI,CAACyE,IAAL,CAAUzE,IAAI,CAACuF,OAAL,CAAaF,QAAb,CAAV,CAAb,EAAgD;AAC9CG,MAAAA,SAAS,EAAE;AADmC,KAAhD;AAGD,GAJD,CAIE,MAAM,CAAE;AACX,CAND;;AAQA1G,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC;;AAEA,MAAM4F,iBAAiB,GAAGf,MAAM,IAAIA,MAAM,CAACV,OAAP,CAAe,UAAf,EAA2B,IAA3B,CAApC;;AAEA,MAAMpE,gBAAgB,GAAG,CAACwG,YAAD,EAAenC,YAAf,KAAgC;AACvD,QAAMoC,SAAS,GAAG9G,MAAM,CAAC+G,IAAP,CAAYF,YAAZ,EACfG,IADe,CACVtF,eAAe,CAACK,OADN,EAEfkF,GAFe,CAGdzE,GAAG,IACD,aACAgE,mBAAmB,CAAChE,GAAD,CADnB,GAEA,MAFA,GAGAgE,mBAAmB,CAACN,iBAAiB,CAACW,YAAY,CAACrE,GAAD,CAAb,CAAlB,CAHnB,GAIA,GARY,CAAlB;AAUAlC,EAAAA,qBAAqB,CAACoE,YAAD,CAArB;AACA1B,EAAAA,aAAa,CACX0B,YADW,EAEXhB,oBAAoB,KAAK,MAAzB,GAAkCoD,SAAS,CAACjB,IAAV,CAAe,MAAf,CAAlC,GAA2D,IAFhD,CAAb;AAID,CAhBD;;AAkBA3F,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;;AAEA,MAAM6G,cAAc,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACzC,QAAMC,YAAY,GAAGjD,KAAK,CAACkD,IAAN,CAAWH,MAAX,CAArB;AACAC,EAAAA,MAAM,CAACG,OAAP,CAAe,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AACvC,UAAMC,aAAa,GAAGL,YAAY,CAACI,KAAD,CAAlC;;AAEA,QAAIrD,KAAK,CAACC,OAAN,CAAc8C,MAAM,CAACM,KAAD,CAApB,CAAJ,EAAkC;AAChCJ,MAAAA,YAAY,CAACI,KAAD,CAAZ,GAAsBP,cAAc,CAACC,MAAM,CAACM,KAAD,CAAP,EAAgBD,aAAhB,CAApC;AACD,KAFD,MAEO,IAAItD,QAAQ,CAACwD,aAAD,CAAZ,EAA6B;AAClCL,MAAAA,YAAY,CAACI,KAAD,CAAZ,GAAsBrH,SAAS,CAAC+G,MAAM,CAACM,KAAD,CAAP,EAAgBD,aAAhB,CAA/B;AACD,KAFM,MAEA;AACL;AACAH,MAAAA,YAAY,CAACI,KAAD,CAAZ,GAAsBD,aAAtB;AACD;AACF,GAXD;AAYA,SAAOH,YAAP;AACD,CAfD,C,CAeG;;;AAEH,MAAMjH,SAAS,GAAG,CAAC+G,MAAD,EAASC,MAAT,KAAoB;AACpC,MAAIlD,QAAQ,CAACiD,MAAD,CAAR,IAAoBjD,QAAQ,CAACkD,MAAD,CAAhC,EAA0C;AACxC,UAAMC,YAAY,GAAG,EAAC,GAAGF;AAAJ,KAArB;AACAnH,IAAAA,MAAM,CAAC+G,IAAP,CAAYK,MAAZ,EAAoBG,OAApB,CAA4B/E,GAAG,IAAI;AACjC,UAAI0B,QAAQ,CAACkD,MAAM,CAAC5E,GAAD,CAAP,CAAR,IAAyB,CAAC4E,MAAM,CAAC5E,GAAD,CAAN,CAAYmF,QAA1C,EAAoD;AAClD,YAAI,EAAEnF,GAAG,IAAI2E,MAAT,CAAJ,EACEnH,MAAM,CAAC4H,MAAP,CAAcP,YAAd,EAA4B;AAC1B,WAAC7E,GAAD,GAAO4E,MAAM,CAAC5E,GAAD;AADa,SAA5B,EADF,KAIK6E,YAAY,CAAC7E,GAAD,CAAZ,GAAoBpC,SAAS,CAAC+G,MAAM,CAAC3E,GAAD,CAAP,EAAc4E,MAAM,CAAC5E,GAAD,CAApB,CAA7B;AACN,OAND,MAMO,IAAI4B,KAAK,CAACC,OAAN,CAAc+C,MAAM,CAAC5E,GAAD,CAApB,CAAJ,EAAgC;AACrC6E,QAAAA,YAAY,CAAC7E,GAAD,CAAZ,GAAoB0E,cAAc,CAACC,MAAM,CAAC3E,GAAD,CAAP,EAAc4E,MAAM,CAAC5E,GAAD,CAApB,CAAlC;AACD,OAFM,MAEA;AACLxC,QAAAA,MAAM,CAAC4H,MAAP,CAAcP,YAAd,EAA4B;AAC1B,WAAC7E,GAAD,GAAO4E,MAAM,CAAC5E,GAAD;AADa,SAA5B;AAGD;AACF,KAdD;AAeA,WAAO6E,YAAP;AACD,GAlBD,MAkBO,IAAIjD,KAAK,CAACC,OAAN,CAAc8C,MAAd,KAAyB/C,KAAK,CAACC,OAAN,CAAc+C,MAAd,CAA7B,EAAoD;AACzD,WAAOF,cAAc,CAACC,MAAD,EAASC,MAAT,CAArB;AACD;;AAED,SAAOD,MAAP;AACD,CAxBD;;AA0BAjH,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.deepMerge = exports.saveSnapshotFile = exports.ensureDirectoryExists = exports.escapeBacktickString = exports.deserializeString = exports.minify = exports.serialize = exports.removeLinesBeforeExternalMatcherTrap = exports.removeExtraLineBreaks = exports.addExtraLineBreaks = exports.getSnapshotData = exports.keyToTestName = exports.testNameToKey = exports.SNAPSHOT_VERSION_WARNING = exports.SNAPSHOT_GUIDE_LINK = exports.SNAPSHOT_VERSION = void 0;\n\nvar path = _interopRequireWildcard(require('path'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nvar fs = _interopRequireWildcard(require('graceful-fs'));\n\nvar _naturalCompare = _interopRequireDefault(require('natural-compare'));\n\nvar _prettyFormat = _interopRequireDefault(require('pretty-format'));\n\nvar _plugins = require('./plugins');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar jestWriteFile =\n  global[Symbol.for('jest-native-write-file')] || fs.writeFileSync;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar jestReadFile =\n  global[Symbol.for('jest-native-read-file')] || fs.readFileSync;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar jestExistsFile =\n  global[Symbol.for('jest-native-exists-file')] || fs.existsSync;\nconst SNAPSHOT_VERSION = '1';\nexports.SNAPSHOT_VERSION = SNAPSHOT_VERSION;\nconst SNAPSHOT_VERSION_REGEXP = /^\\/\\/ Jest Snapshot v(.+),/;\nconst SNAPSHOT_GUIDE_LINK = 'https://goo.gl/fbAQLP';\nexports.SNAPSHOT_GUIDE_LINK = SNAPSHOT_GUIDE_LINK;\n\nconst SNAPSHOT_VERSION_WARNING = _chalk.default.yellow(\n  `${_chalk.default.bold('Warning')}: Before you upgrade snapshots, ` +\n    `we recommend that you revert any local changes to tests or other code, ` +\n    `to ensure that you do not store invalid state.`\n);\n\nexports.SNAPSHOT_VERSION_WARNING = SNAPSHOT_VERSION_WARNING;\n\nconst writeSnapshotVersion = () =>\n  `// Jest Snapshot v${SNAPSHOT_VERSION}, ${SNAPSHOT_GUIDE_LINK}`;\n\nconst validateSnapshotVersion = snapshotContents => {\n  const versionTest = SNAPSHOT_VERSION_REGEXP.exec(snapshotContents);\n  const version = versionTest && versionTest[1];\n\n  if (!version) {\n    return new Error(\n      _chalk.default.red(\n        `${_chalk.default.bold(\n          'Outdated snapshot'\n        )}: No snapshot header found. ` +\n          `Jest 19 introduced versioned snapshots to ensure all developers ` +\n          `on a project are using the same version of Jest. ` +\n          `Please update all snapshots during this upgrade of Jest.\\n\\n`\n      ) + SNAPSHOT_VERSION_WARNING\n    );\n  }\n\n  if (version < SNAPSHOT_VERSION) {\n    return new Error(\n      _chalk.default.red(\n        `${_chalk.default.red.bold(\n          'Outdated snapshot'\n        )}: The version of the snapshot ` +\n          `file associated with this test is outdated. The snapshot file ` +\n          `version ensures that all developers on a project are using ` +\n          `the same version of Jest. ` +\n          `Please update all snapshots during this upgrade of Jest.\\n\\n`\n      ) +\n        `Expected: v${SNAPSHOT_VERSION}\\n` +\n        `Received: v${version}\\n\\n` +\n        SNAPSHOT_VERSION_WARNING\n    );\n  }\n\n  if (version > SNAPSHOT_VERSION) {\n    return new Error(\n      _chalk.default.red(\n        `${_chalk.default.red.bold(\n          'Outdated Jest version'\n        )}: The version of this ` +\n          `snapshot file indicates that this project is meant to be used ` +\n          `with a newer version of Jest. The snapshot file version ensures ` +\n          `that all developers on a project are using the same version of ` +\n          `Jest. Please update your version of Jest and re-run the tests.\\n\\n`\n      ) +\n        `Expected: v${SNAPSHOT_VERSION}\\n` +\n        `Received: v${version}`\n    );\n  }\n\n  return null;\n};\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nconst testNameToKey = (testName, count) => testName + ' ' + count;\n\nexports.testNameToKey = testNameToKey;\n\nconst keyToTestName = key => {\n  if (!/ \\d+$/.test(key)) {\n    throw new Error('Snapshot keys must end with a number.');\n  }\n\n  return key.replace(/ \\d+$/, '');\n};\n\nexports.keyToTestName = keyToTestName;\n\nconst getSnapshotData = (snapshotPath, update) => {\n  const data = Object.create(null);\n  let snapshotContents = '';\n  let dirty = false;\n\n  if (jestExistsFile(snapshotPath)) {\n    try {\n      snapshotContents = jestReadFile(snapshotPath, 'utf8'); // eslint-disable-next-line no-new-func\n\n      const populate = new Function('exports', snapshotContents);\n      populate(data);\n    } catch {}\n  }\n\n  const validationResult = validateSnapshotVersion(snapshotContents);\n  const isInvalid = snapshotContents && validationResult;\n\n  if (update === 'none' && isInvalid) {\n    throw validationResult;\n  }\n\n  if ((update === 'all' || update === 'new') && isInvalid) {\n    dirty = true;\n  }\n\n  return {\n    data,\n    dirty\n  };\n}; // Add extra line breaks at beginning and end of multiline snapshot\n// to make the content easier to read.\n\nexports.getSnapshotData = getSnapshotData;\n\nconst addExtraLineBreaks = string =>\n  string.includes('\\n') ? `\\n${string}\\n` : string; // Remove extra line breaks at beginning and end of multiline snapshot.\n// Instead of trim, which can remove additional newlines or spaces\n// at beginning or end of the content from a custom serializer.\n\nexports.addExtraLineBreaks = addExtraLineBreaks;\n\nconst removeExtraLineBreaks = string =>\n  string.length > 2 && string.startsWith('\\n') && string.endsWith('\\n')\n    ? string.slice(1, -1)\n    : string;\n\nexports.removeExtraLineBreaks = removeExtraLineBreaks;\n\nconst removeLinesBeforeExternalMatcherTrap = stack => {\n  const lines = stack.split('\\n');\n\n  for (let i = 0; i < lines.length; i += 1) {\n    // It's a function name specified in `packages/expect/src/index.ts`\n    // for external custom matchers.\n    if (lines[i].includes('__EXTERNAL_MATCHER_TRAP__')) {\n      return lines.slice(i + 1).join('\\n');\n    }\n  }\n\n  return stack;\n};\n\nexports.removeLinesBeforeExternalMatcherTrap = removeLinesBeforeExternalMatcherTrap;\nconst escapeRegex = true;\nconst printFunctionName = false;\n\nconst serialize = (val, indent = 2) =>\n  normalizeNewlines(\n    (0, _prettyFormat.default)(val, {\n      escapeRegex,\n      indent,\n      plugins: (0, _plugins.getSerializers)(),\n      printFunctionName\n    })\n  );\n\nexports.serialize = serialize;\n\nconst minify = val =>\n  (0, _prettyFormat.default)(val, {\n    escapeRegex,\n    min: true,\n    plugins: (0, _plugins.getSerializers)(),\n    printFunctionName\n  }); // Remove double quote marks and unescape double quotes and backslashes.\n\nexports.minify = minify;\n\nconst deserializeString = stringified =>\n  stringified.slice(1, -1).replace(/\\\\(\"|\\\\)/g, '$1');\n\nexports.deserializeString = deserializeString;\n\nconst escapeBacktickString = str => str.replace(/`|\\\\|\\${/g, '\\\\$&');\n\nexports.escapeBacktickString = escapeBacktickString;\n\nconst printBacktickString = str => '`' + escapeBacktickString(str) + '`';\n\nconst ensureDirectoryExists = filePath => {\n  try {\n    fs.mkdirSync(path.join(path.dirname(filePath)), {\n      recursive: true\n    });\n  } catch {}\n};\n\nexports.ensureDirectoryExists = ensureDirectoryExists;\n\nconst normalizeNewlines = string => string.replace(/\\r\\n|\\r/g, '\\n');\n\nconst saveSnapshotFile = (snapshotData, snapshotPath) => {\n  const snapshots = Object.keys(snapshotData)\n    .sort(_naturalCompare.default)\n    .map(\n      key =>\n        'exports[' +\n        printBacktickString(key) +\n        '] = ' +\n        printBacktickString(normalizeNewlines(snapshotData[key])) +\n        ';'\n    );\n  ensureDirectoryExists(snapshotPath);\n  jestWriteFile(\n    snapshotPath,\n    writeSnapshotVersion() + '\\n\\n' + snapshots.join('\\n\\n') + '\\n'\n  );\n};\n\nexports.saveSnapshotFile = saveSnapshotFile;\n\nconst deepMergeArray = (target, source) => {\n  const mergedOutput = Array.from(target);\n  source.forEach((sourceElement, index) => {\n    const targetElement = mergedOutput[index];\n\n    if (Array.isArray(target[index])) {\n      mergedOutput[index] = deepMergeArray(target[index], sourceElement);\n    } else if (isObject(targetElement)) {\n      mergedOutput[index] = deepMerge(target[index], sourceElement);\n    } else {\n      // Source does not exist in target or target is primitive and cannot be deep merged\n      mergedOutput[index] = sourceElement;\n    }\n  });\n  return mergedOutput;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nconst deepMerge = (target, source) => {\n  if (isObject(target) && isObject(source)) {\n    const mergedOutput = {...target};\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key]) && !source[key].$$typeof) {\n        if (!(key in target))\n          Object.assign(mergedOutput, {\n            [key]: source[key]\n          });\n        else mergedOutput[key] = deepMerge(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        mergedOutput[key] = deepMergeArray(target[key], source[key]);\n      } else {\n        Object.assign(mergedOutput, {\n          [key]: source[key]\n        });\n      }\n    });\n    return mergedOutput;\n  } else if (Array.isArray(target) && Array.isArray(source)) {\n    return deepMergeArray(target, source);\n  }\n\n  return target;\n};\n\nexports.deepMerge = deepMerge;\n"]},"metadata":{},"sourceType":"script"}