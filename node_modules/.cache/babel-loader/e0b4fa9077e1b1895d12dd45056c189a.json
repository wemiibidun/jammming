{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst findUp = require('find-up');\n\nconst readPkg = require('read-pkg');\n\nmodule.exports = async options => {\n  const filePath = await findUp('package.json', options);\n\n  if (!filePath) {\n    return;\n  }\n\n  return {\n    packageJson: await readPkg({ ...options,\n      cwd: path.dirname(filePath)\n    }),\n    path: filePath\n  };\n};\n\nmodule.exports.sync = options => {\n  const filePath = findUp.sync('package.json', options);\n\n  if (!filePath) {\n    return;\n  }\n\n  return {\n    packageJson: readPkg.sync({ ...options,\n      cwd: path.dirname(filePath)\n    }),\n    path: filePath\n  };\n};","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-config/node_modules/read-pkg-up/index.js"],"names":["path","require","findUp","readPkg","module","exports","options","filePath","packageJson","cwd","dirname","sync"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,MAAMC,OAAN,IAAiB;AACjC,QAAMC,QAAQ,GAAG,MAAML,MAAM,CAAC,cAAD,EAAiBI,OAAjB,CAA7B;;AAEA,MAAI,CAACC,QAAL,EAAe;AACd;AACA;;AAED,SAAO;AACNC,IAAAA,WAAW,EAAE,MAAML,OAAO,CAAC,EAAC,GAAGG,OAAJ;AAAaG,MAAAA,GAAG,EAAET,IAAI,CAACU,OAAL,CAAaH,QAAb;AAAlB,KAAD,CADpB;AAENP,IAAAA,IAAI,EAAEO;AAFA,GAAP;AAIA,CAXD;;AAaAH,MAAM,CAACC,OAAP,CAAeM,IAAf,GAAsBL,OAAO,IAAI;AAChC,QAAMC,QAAQ,GAAGL,MAAM,CAACS,IAAP,CAAY,cAAZ,EAA4BL,OAA5B,CAAjB;;AAEA,MAAI,CAACC,QAAL,EAAe;AACd;AACA;;AAED,SAAO;AACNC,IAAAA,WAAW,EAAEL,OAAO,CAACQ,IAAR,CAAa,EAAC,GAAGL,OAAJ;AAAaG,MAAAA,GAAG,EAAET,IAAI,CAACU,OAAL,CAAaH,QAAb;AAAlB,KAAb,CADP;AAENP,IAAAA,IAAI,EAAEO;AAFA,GAAP;AAIA,CAXD","sourcesContent":["'use strict';\nconst path = require('path');\nconst findUp = require('find-up');\nconst readPkg = require('read-pkg');\n\nmodule.exports = async options => {\n\tconst filePath = await findUp('package.json', options);\n\n\tif (!filePath) {\n\t\treturn;\n\t}\n\n\treturn {\n\t\tpackageJson: await readPkg({...options, cwd: path.dirname(filePath)}),\n\t\tpath: filePath\n\t};\n};\n\nmodule.exports.sync = options => {\n\tconst filePath = findUp.sync('package.json', options);\n\n\tif (!filePath) {\n\t\treturn;\n\t}\n\n\treturn {\n\t\tpackageJson: readPkg.sync({...options, cwd: path.dirname(filePath)}),\n\t\tpath: filePath\n\t};\n};\n"]},"metadata":{},"sourceType":"script"}