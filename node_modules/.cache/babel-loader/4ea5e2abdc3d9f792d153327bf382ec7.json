{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    all,\n    enums\n  } = options;\n\n  if (typeof all !== \"boolean\" && typeof all !== \"undefined\") {\n    throw new Error(\".all must be a boolean, or undefined\");\n  }\n\n  if (typeof enums !== \"boolean\" && typeof enums !== \"undefined\") {\n    throw new Error(\".enums must be a boolean, or undefined\");\n  }\n\n  return {\n    name: \"syntax-flow\",\n\n    manipulateOptions(opts, parserOpts) {\n      if (parserOpts.plugins.some(p => (Array.isArray(p) ? p[0] : p) === \"typescript\")) {\n        return;\n      }\n\n      parserOpts.plugins.push([\"flow\", {\n        all,\n        enums\n      }]);\n    }\n\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/@babel/plugin-syntax-flow/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_default","declare","api","options","assertVersion","all","enums","Error","name","manipulateOptions","opts","parserOpts","plugins","some","p","Array","isArray","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGF,kBAAkB,CAACG,OAAvB,EAAgC,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/DD,EAAAA,GAAG,CAACE,aAAJ,CAAkB,CAAlB;AACA,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA;AAFI,MAGFH,OAHJ;;AAKA,MAAI,OAAOE,GAAP,KAAe,SAAf,IAA4B,OAAOA,GAAP,KAAe,WAA/C,EAA4D;AAC1D,UAAM,IAAIE,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,MAAI,OAAOD,KAAP,KAAiB,SAAjB,IAA8B,OAAOA,KAAP,KAAiB,WAAnD,EAAgE;AAC9D,UAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;;AAGLC,IAAAA,iBAAiB,CAACC,IAAD,EAAOC,UAAP,EAAmB;AAClC,UAAIA,UAAU,CAACC,OAAX,CAAmBC,IAAnB,CAAwBC,CAAC,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,CAAd,IAAmBA,CAAC,CAAC,CAAD,CAApB,GAA0BA,CAA3B,MAAkC,YAA/D,CAAJ,EAAkF;AAChF;AACD;;AAEDH,MAAAA,UAAU,CAACC,OAAX,CAAmBK,IAAnB,CAAwB,CAAC,MAAD,EAAS;AAC/BZ,QAAAA,GAD+B;AAE/BC,QAAAA;AAF+B,OAAT,CAAxB;AAID;;AAZI,GAAP;AAeD,CA9Bc,CAAf;;AAgCAX,OAAO,CAACE,OAAR,GAAkBG,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    all,\n    enums\n  } = options;\n\n  if (typeof all !== \"boolean\" && typeof all !== \"undefined\") {\n    throw new Error(\".all must be a boolean, or undefined\");\n  }\n\n  if (typeof enums !== \"boolean\" && typeof enums !== \"undefined\") {\n    throw new Error(\".enums must be a boolean, or undefined\");\n  }\n\n  return {\n    name: \"syntax-flow\",\n\n    manipulateOptions(opts, parserOpts) {\n      if (parserOpts.plugins.some(p => (Array.isArray(p) ? p[0] : p) === \"typescript\")) {\n        return;\n      }\n\n      parserOpts.plugins.push([\"flow\", {\n        all,\n        enums\n      }]);\n    }\n\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}