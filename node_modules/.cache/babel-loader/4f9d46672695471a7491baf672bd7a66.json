{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    legacy = false\n  } = options;\n\n  if (typeof legacy !== \"boolean\") {\n    throw new Error(\"'legacy' must be a boolean.\");\n  }\n\n  const {\n    decoratorsBeforeExport\n  } = options;\n\n  if (decoratorsBeforeExport === undefined) {\n    if (!legacy) {\n      throw new Error(\"The '@babel/plugin-syntax-decorators' plugin requires a\" + \" 'decoratorsBeforeExport' option, whose value must be a boolean.\" + \" If you want to use the legacy decorators semantics, you can set\" + \" the 'legacy: true' option.\");\n    }\n  } else {\n    if (legacy) {\n      throw new Error(\"'decoratorsBeforeExport' can't be used with legacy decorators.\");\n    }\n\n    if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  return {\n    name: \"syntax-decorators\",\n\n    manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push(legacy ? \"decorators-legacy\" : [\"decorators\", {\n        decoratorsBeforeExport\n      }]);\n    }\n\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/@babel/plugin-syntax-decorators/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_default","declare","api","options","assertVersion","legacy","Error","decoratorsBeforeExport","undefined","name","manipulateOptions","opts","parserOpts","plugins","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGF,kBAAkB,CAACG,OAAvB,EAAgC,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/DD,EAAAA,GAAG,CAACE,aAAJ,CAAkB,CAAlB;AACA,QAAM;AACJC,IAAAA,MAAM,GAAG;AADL,MAEFF,OAFJ;;AAIA,MAAI,OAAOE,MAAP,KAAkB,SAAtB,EAAiC;AAC/B,UAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,QAAM;AACJC,IAAAA;AADI,MAEFJ,OAFJ;;AAIA,MAAII,sBAAsB,KAAKC,SAA/B,EAA0C;AACxC,QAAI,CAACH,MAAL,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAU,4DAA4D,kEAA5D,GAAiI,kEAAjI,GAAsM,6BAAhN,CAAN;AACD;AACF,GAJD,MAIO;AACL,QAAID,MAAJ,EAAY;AACV,YAAM,IAAIC,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,QAAI,OAAOC,sBAAP,KAAkC,SAAtC,EAAiD;AAC/C,YAAM,IAAID,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF;;AAED,SAAO;AACLG,IAAAA,IAAI,EAAE,mBADD;;AAGLC,IAAAA,iBAAiB,CAACC,IAAD,EAAOC,UAAP,EAAmB;AAClCA,MAAAA,UAAU,CAACC,OAAX,CAAmBC,IAAnB,CAAwBT,MAAM,GAAG,mBAAH,GAAyB,CAAC,YAAD,EAAe;AACpEE,QAAAA;AADoE,OAAf,CAAvD;AAGD;;AAPI,GAAP;AAUD,CAtCc,CAAf;;AAwCAZ,OAAO,CAACE,OAAR,GAAkBG,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    legacy = false\n  } = options;\n\n  if (typeof legacy !== \"boolean\") {\n    throw new Error(\"'legacy' must be a boolean.\");\n  }\n\n  const {\n    decoratorsBeforeExport\n  } = options;\n\n  if (decoratorsBeforeExport === undefined) {\n    if (!legacy) {\n      throw new Error(\"The '@babel/plugin-syntax-decorators' plugin requires a\" + \" 'decoratorsBeforeExport' option, whose value must be a boolean.\" + \" If you want to use the legacy decorators semantics, you can set\" + \" the 'legacy: true' option.\");\n    }\n  } else {\n    if (legacy) {\n      throw new Error(\"'decoratorsBeforeExport' can't be used with legacy decorators.\");\n    }\n\n    if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  return {\n    name: \"syntax-decorators\",\n\n    manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push(legacy ? \"decorators-legacy\" : [\"decorators\", {\n        decoratorsBeforeExport\n      }]);\n    }\n\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}