{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = expectationResultFactory;\n\nvar _prettyFormat = _interopRequireDefault(require('pretty-format'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction messageFormatter({\n  error,\n  message,\n  passed\n}) {\n  if (passed) {\n    return 'Passed.';\n  }\n\n  if (message) {\n    return message;\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if ( // duck-type Error, see #2549\n  error && typeof error === 'object' && typeof error.message === 'string' && typeof error.name === 'string') {\n    if (error.message === '') {\n      return error.name;\n    }\n\n    return `${error.name}: ${error.message}`;\n  }\n\n  return `thrown: ${(0, _prettyFormat.default)(error, {\n    maxDepth: 3\n  })}`;\n}\n\nfunction stackFormatter(options, initError, errorMessage) {\n  if (options.passed) {\n    return '';\n  }\n\n  if (options.error) {\n    if (typeof options.error.stack === 'string') {\n      return options.error.stack;\n    }\n\n    if (options.error === errorMessage) {\n      return errorMessage;\n    }\n  }\n\n  if (initError) {\n    return errorMessage.trimRight() + '\\n\\n' + initError.stack;\n  }\n\n  return new Error(errorMessage).stack;\n}\n\nfunction expectationResultFactory(options, initError) {\n  const message = messageFormatter(options);\n  const stack = stackFormatter(options, initError, message);\n\n  if (options.passed) {\n    return {\n      error: options.error,\n      matcherName: options.matcherName,\n      message,\n      passed: options.passed,\n      stack\n    };\n  }\n\n  return {\n    actual: options.actual,\n    error: options.error,\n    expected: options.expected,\n    matcherName: options.matcherName,\n    message,\n    passed: options.passed,\n    stack\n  };\n}","map":{"version":3,"sources":["/Users/wemi/jammming/node_modules/jest-jasmine2/build/expectationResultFactory.js"],"names":["Object","defineProperty","exports","value","default","expectationResultFactory","_prettyFormat","_interopRequireDefault","require","obj","__esModule","messageFormatter","error","message","passed","name","maxDepth","stackFormatter","options","initError","errorMessage","stack","trimRight","Error","matcherName","actual","expected"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = expectationResultFactory;\n\nvar _prettyFormat = _interopRequireDefault(require('pretty-format'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction messageFormatter({error, message, passed}) {\n  if (passed) {\n    return 'Passed.';\n  }\n\n  if (message) {\n    return message;\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (\n    // duck-type Error, see #2549\n    error &&\n    typeof error === 'object' &&\n    typeof error.message === 'string' &&\n    typeof error.name === 'string'\n  ) {\n    if (error.message === '') {\n      return error.name;\n    }\n\n    return `${error.name}: ${error.message}`;\n  }\n\n  return `thrown: ${(0, _prettyFormat.default)(error, {\n    maxDepth: 3\n  })}`;\n}\n\nfunction stackFormatter(options, initError, errorMessage) {\n  if (options.passed) {\n    return '';\n  }\n\n  if (options.error) {\n    if (typeof options.error.stack === 'string') {\n      return options.error.stack;\n    }\n\n    if (options.error === errorMessage) {\n      return errorMessage;\n    }\n  }\n\n  if (initError) {\n    return errorMessage.trimRight() + '\\n\\n' + initError.stack;\n  }\n\n  return new Error(errorMessage).stack;\n}\n\nfunction expectationResultFactory(options, initError) {\n  const message = messageFormatter(options);\n  const stack = stackFormatter(options, initError, message);\n\n  if (options.passed) {\n    return {\n      error: options.error,\n      matcherName: options.matcherName,\n      message,\n      passed: options.passed,\n      stack\n    };\n  }\n\n  return {\n    actual: options.actual,\n    error: options.error,\n    expected: options.expected,\n    matcherName: options.matcherName,\n    message,\n    passed: options.passed,\n    stack\n  };\n}\n"]},"metadata":{},"sourceType":"script"}